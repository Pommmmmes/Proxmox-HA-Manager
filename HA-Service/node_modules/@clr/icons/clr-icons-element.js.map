{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./projects/icons/src/clr-icons-api.ts","webpack:///./projects/icons/src/clr-icons-element.ts","webpack:///./projects/icons/src/utils/shape-template-observer.ts"],"names":[],"mappings":"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","file":"clr-icons-element.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./projects/icons/src/clr-icons-element.ts\");\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { IconAlias, IconShapeSources } from './interfaces/icon-interfaces';\nimport { ShapeTemplateObserver } from './utils/shape-template-observer';\n\nconst iconShapeSources: IconShapeSources = {};\n\nexport class ClarityIconsApi {\n  private static singleInstance: ClarityIconsApi;\n\n  static get instance(): ClarityIconsApi {\n    if (!ClarityIconsApi.singleInstance) {\n      ClarityIconsApi.singleInstance = new ClarityIconsApi();\n    }\n\n    return ClarityIconsApi.singleInstance;\n  }\n\n  private validateName(name: string): boolean {\n    if (name.length === 0) {\n      throw new Error('Shape name or alias must be a non-empty string!');\n    }\n\n    if (/\\s/.test(name)) {\n      throw new Error('Shape name or alias must not contain any whitespace characters!');\n    }\n\n    return true;\n  }\n\n  private normalizeShapeName(shapeName: string) {\n    return shapeName.toLowerCase();\n  }\n\n  private setIconTemplate(shapeName: string, shapeTemplate: string): void {\n    const trimmedShapeTemplate = shapeTemplate.trim();\n\n    if (this.validateName(shapeName)) {\n      // Make sure the shapeName don't contain uppercase characters\n      // when registering it\n      shapeName = this.normalizeShapeName(shapeName);\n\n      // if the shape name exists, delete it.\n      if (iconShapeSources[shapeName]) {\n        delete iconShapeSources[shapeName];\n      }\n\n      iconShapeSources[shapeName] = trimmedShapeTemplate;\n\n      ShapeTemplateObserver.instance.emitChanges(shapeName, trimmedShapeTemplate);\n    }\n  }\n\n  private setIconAliases(templates: IconShapeSources, shapeName: string, aliasNames: string[]): void {\n    for (const aliasName of aliasNames) {\n      if (this.validateName(aliasName)) {\n        Object.defineProperty(templates, aliasName, {\n          get: function () {\n            return templates[shapeName];\n          },\n          enumerable: true,\n          configurable: true,\n        });\n      }\n    }\n  }\n\n  add(icons?: IconShapeSources): void {\n    if (typeof icons !== 'object') {\n      throw new Error(`The argument must be an object literal passed in the following pattern:\n                { \"shape-name\": \"shape-template\" }`);\n    }\n\n    for (const shapeName in icons) {\n      if (icons.hasOwnProperty(shapeName)) {\n        this.setIconTemplate(shapeName, icons[shapeName]);\n      }\n    }\n  }\n\n  has(shapeName: string): boolean {\n    return !!iconShapeSources[this.normalizeShapeName(shapeName)];\n  }\n\n  get(shapeName?: string): any {\n    // if shapeName is not given, return all icon templates.\n    if (!shapeName) {\n      return iconShapeSources;\n    }\n\n    if (typeof shapeName !== 'string') {\n      throw new TypeError('Only string argument is allowed in this method.');\n    }\n\n    return iconShapeSources[this.normalizeShapeName(shapeName)];\n  }\n\n  alias(aliases?: IconAlias): void {\n    if (typeof aliases !== 'object') {\n      throw new Error(`The argument must be an object literal passed in the following pattern:\n                { \"shape-name\": [\"alias-name\", ...] }`);\n    }\n\n    for (const shapeName in aliases) {\n      if (aliases.hasOwnProperty(shapeName)) {\n        if (iconShapeSources.hasOwnProperty(shapeName)) {\n          // set an alias to the icon if it exists in iconShapeSources.\n          this.setIconAliases(iconShapeSources, shapeName, aliases[shapeName]);\n        } else {\n          throw new Error(\n            `An icon \"${shapeName}\" you are trying to set aliases to doesn't exist in the Clarity Icons sets!`\n          );\n        }\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClarityIconsApi } from './clr-icons-api';\nimport { ShapeTemplateObserver } from './utils/shape-template-observer';\n\n/* CLR-ICON CUSTOM ELEMENT */\n\nlet clrIconId = 0;\nconst offScreenSpan = document.createElement('span');\noffScreenSpan.className = 'is-off-screen';\n\nlet parentConstructor = function (this: any) {\n  // eslint-disable-next-line prefer-rest-params\n  return HTMLElement.apply(this, arguments);\n};\nif (typeof Reflect === 'object') {\n  parentConstructor = function () {\n    // eslint-disable-next-line prefer-rest-params\n    return (Reflect as any).construct(HTMLElement, arguments, this.constructor);\n  };\n}\n\nexport function ClarityIconElement(this: any) {\n  'use strict';\n\n  // eslint-disable-next-line prefer-rest-params\n  const _instance = (parentConstructor as any).apply(this, arguments);\n\n  _instance.clrIconUniqId = '_clr_icon_' + clrIconId;\n  clrIconId++;\n\n  return _instance;\n}\n\n(ClarityIconElement as any).observedAttributes = ['shape', 'size', 'title'];\n\nClarityIconElement.prototype = Object.create(HTMLElement.prototype, {\n  constructor: { configurable: true, writable: true, value: ClarityIconElement },\n});\n\nClarityIconElement.prototype.constructor = ClarityIconElement;\n\nClarityIconElement.prototype._appendCustomTitle = function () {\n  const cloneOffScreenSpan = offScreenSpan.cloneNode(false) as HTMLElement;\n  cloneOffScreenSpan.id = this.clrIconUniqId;\n  cloneOffScreenSpan.textContent = this.currentTitleAttrVal;\n  this.appendChild(cloneOffScreenSpan);\n};\n\nClarityIconElement.prototype._setIconSize = function (size: string) {\n  if (!Number(size) || Number(size) < 0) {\n    this.style.width = null; // fallback to the original stylesheet value\n    this.style.height = null; // fallback to the original stylesheet value\n  } else {\n    this.style.width = size + 'px';\n    this.style.height = size + 'px';\n  }\n};\n\nClarityIconElement.prototype._normalizeShape = function (value: string): string {\n  return value.split(/\\s/)[0].toLowerCase();\n};\n\nClarityIconElement.prototype.connectedCallback = function () {\n  // One thing to note here is that the attributeChangedCallback method is called for every attribute first\n  // before this connectedCallback method called only once when the custom element is inserted into the DOM.\n  // So we could check whether the attribute values really changed or not.\n  // If not, we don't need to execute the same codes again.\n\n  // We want to hide the custom element from screen readers but allow the svg/img content to still be read inline\n  // Adding role=none allows the screen reader to skip the custom element as if it were a div or span.\n  // https://www.scottohara.me/blog/2018/05/05/hidden-vs-none.html\n  if (!this.getAttribute('role')) {\n    this.setAttribute('role', 'none');\n  }\n\n  if (this.hasAttribute('size')) {\n    const sizeAttrValue = this.getAttribute('size');\n\n    if (this.currentSizeAttrVal !== sizeAttrValue) {\n      this.currentSizeAttrVal = sizeAttrValue;\n      this._setIconSize(sizeAttrValue);\n    }\n  }\n\n  // Note: the size attribute is irrelevant from the shape template;\n  // That's why the size checking placed before detecting changes in shape and title attributes.\n  // This means even if the shape is not found, the injected shape will have the user-given size.\n\n  if (this.hasAttribute('shape')) {\n    const shapeAttrValue = this._normalizeShape(this.getAttribute('shape'));\n\n    this._shapeTemplateSubscription = ShapeTemplateObserver.instance.subscribeTo(\n      shapeAttrValue,\n      (updatedTemplate: string) => {\n        this._injectTemplate(updatedTemplate);\n      }\n    );\n\n    this.currentShapeAttrVal = shapeAttrValue;\n\n    if (ClarityIconsApi.instance.has(this.currentShapeAttrVal)) {\n      const currentShapeTemplate = ClarityIconsApi.instance.get(this.currentShapeAttrVal);\n      if (currentShapeTemplate === this.currentShapeTemplate) {\n        return;\n      } else {\n        this.currentShapeTemplate = currentShapeTemplate;\n      }\n    } else {\n      this._injectErrorTemplate();\n      return;\n    }\n  }\n\n  if (this.hasAttribute('title')) {\n    const titleAttrValue = this.getAttribute('title');\n\n    if (this.currentTitleAttrVal !== titleAttrValue) {\n      this.currentTitleAttrVal = titleAttrValue;\n    }\n\n    if (!this.currentShapeAttrVal) {\n      return;\n    }\n  }\n\n  this._injectTemplate();\n};\n\nClarityIconElement.prototype.attributeChangedCallback = function (\n  attributeName: string,\n  _oldValue: string,\n  newValue: string\n) {\n  if (attributeName === 'size') {\n    this._setIconSize(newValue);\n  }\n\n  // Note: the size attribute is irrelevant from the shape template;\n  // That's why the size checking placed before detecting changes in shape and title attributes.\n  // This means even if the shape is not found, the injected shape will have the user-given size.\n\n  if (attributeName === 'shape') {\n    this.currentShapeAttrVal = this._normalizeShape(newValue);\n\n    // transfer change handler callback to new shape name\n    if (this._shapeTemplateSubscription) {\n      // remove the existing change handler callback on the old shape name\n      this._shapeTemplateSubscription();\n      // create a new subscription on the new shape name\n      this._shapeTemplateSubscription = ShapeTemplateObserver.instance.subscribeTo(\n        this.currentShapeAttrVal,\n        (updatedTemplate: string) => {\n          this._injectTemplate(updatedTemplate);\n        }\n      );\n    }\n\n    if (ClarityIconsApi.instance.has(this.currentShapeAttrVal)) {\n      this.currentShapeTemplate = ClarityIconsApi.instance.get(this.currentShapeAttrVal);\n    } else {\n      this._injectErrorTemplate();\n      return;\n    }\n  }\n  if (attributeName === 'title') {\n    this.currentTitleAttrVal = newValue;\n\n    if (!this.currentShapeAttrVal) {\n      return;\n    }\n  }\n\n  this._injectTemplate();\n};\n\nClarityIconElement.prototype.disconnectedCallback = function () {\n  // as the icon element is removed from the DOM,\n  // remove its listener callback function as well.\n  if (this._shapeTemplateSubscription) {\n    this._shapeTemplateSubscription();\n  }\n};\n\nClarityIconElement.prototype._setAriaLabelledBy = function () {\n  const existingAriaLabelledBy: string = this.getAttribute('aria-labelledby');\n  const svgElement: SVGElement = this.querySelector('svg');\n  const elementToSet = svgElement ? svgElement : this;\n\n  if (!existingAriaLabelledBy) {\n    elementToSet.setAttribute('aria-labelledby', this.clrIconUniqId);\n  } else if (existingAriaLabelledBy && existingAriaLabelledBy.indexOf(this.clrIconUniqId) < 0) {\n    elementToSet.setAttribute('aria-labelledby', existingAriaLabelledBy + ' ' + this.clrIconUniqId);\n  }\n};\n\nClarityIconElement.prototype._injectTemplate = function (shapeTemplate?: string) {\n  // Accepting the argument, shapeTemplate, will help us to update the shape template\n  // right before the injection.\n  if (shapeTemplate && shapeTemplate !== this.currentShapeTemplate) {\n    this.currentShapeTemplate = shapeTemplate;\n  }\n\n  this.innerHTML = this.currentShapeTemplate;\n\n  if (this.currentTitleAttrVal) {\n    this._setAriaLabelledBy();\n    this._appendCustomTitle();\n  }\n};\n\nClarityIconElement.prototype._injectErrorTemplate = function () {\n  this.currentShapeTemplate = ClarityIconsApi.instance.get('error');\n  this._injectTemplate();\n};\n","/**\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ShapeTemplateObservables } from '../interfaces/icon-interfaces';\n\nexport const changeHandlerCallbacks: ShapeTemplateObservables = {};\n\nexport class ShapeTemplateObserver {\n  private static singleInstance: ShapeTemplateObserver;\n\n  private callbacks: ShapeTemplateObservables = changeHandlerCallbacks;\n\n  public static get instance(): ShapeTemplateObserver {\n    if (!ShapeTemplateObserver.singleInstance) {\n      ShapeTemplateObserver.singleInstance = new ShapeTemplateObserver();\n    }\n\n    return ShapeTemplateObserver.singleInstance;\n  }\n\n  public subscribeTo(shapeName: string, changeHandlerCallback: (arg0: string) => void) {\n    if (!this.callbacks[shapeName]) {\n      this.callbacks[shapeName] = [changeHandlerCallback];\n    } else {\n      if (this.callbacks[shapeName].indexOf(changeHandlerCallback) === -1) {\n        this.callbacks[shapeName].push(changeHandlerCallback);\n      }\n    }\n\n    // this returned function give users an ability to remove the subscription\n    return () => {\n      const removeAt = this.callbacks[shapeName].indexOf(changeHandlerCallback);\n      this.callbacks[shapeName].splice(removeAt, 1);\n\n      // if the array is empty, remove the property from the callbacks\n      if (this.callbacks[shapeName].length === 0) {\n        delete this.callbacks[shapeName];\n      }\n    };\n  }\n\n  public emitChanges(shapeName: string, template: string) {\n    if (this.callbacks[shapeName]) {\n      // this will emit changes to all observers\n      // by calling their callback functions on template changes\n      this.callbacks[shapeName].map((changeHandlerCallback: (arg0: string) => void) => {\n        changeHandlerCallback(template);\n      });\n    }\n  }\n}\n"],"sourceRoot":""}