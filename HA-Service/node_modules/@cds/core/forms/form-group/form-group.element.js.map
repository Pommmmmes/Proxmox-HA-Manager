{"version":3,"file":"form-group.element.js","sources":["../../../../src/forms/form-group/form-group.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement, html } from 'lit';\nimport { baseStyles, querySlotAll, property, childrenUpdateComplete, elementResize, pxToRem, syncDefinedProps, elementVisible, } from '@cds/core/internal';\nimport { getLargestPrimaryLabelWidth, isVerticalLayout, defaultFormLayout } from '../utils/utils.js';\nimport styles from './form-group.element.scss';\n/**\n * Form\n *\n * ```typescript\n * import '@cds/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-form-group layout=\"horizontal\">\n *   <cds-input>\n *     <label>Test</label>\n *     <input type=\"text\" />\n *   </cds-input>\n *\n *   <cds-input>\n *     <label>Test</label>\n *     <input type=\"text\" />\n *   </cds-input>\n * </cds-form-group>\n * ```\n *\n * @element cds-form-group\n * @slot - For projecting input controls\n * @cssprop --label-width\n */\nexport class CdsFormGroup extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Set to adjust the default control layout for all controls within form group.\n         * When `responsive` is true this will be the largest size to scale to.\n         * @type {horizontal | horizontal-inline | vertical | vertical-inline | compact}\n         */\n        this.layout = defaultFormLayout;\n        /**\n         * By default forms will collapse to layout that prevents overflow.\n         * If disabled control layout may break or overflow in unexpected ways.\n         */\n        this.responsive = true;\n        /**\n         * Set the validate attribute to sync with HTML5 native validation\n         * https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation\n         */\n        this.validate = false;\n        this.observers = [];\n    }\n    get controlsAndGroups() {\n        return [...Array.from(this.groups), ...Array.from(this.controls)];\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    render() {\n        return html `\n      <div class=\"private-host\" cds-layout=\"vertical gap:${this.layout === 'compact' ? 'sm' : 'lg'}\">\n        <slot></slot>\n      </div>\n    `;\n    }\n    firstUpdated(props) {\n        super.firstUpdated(props);\n        this.syncLayouts();\n        this.setControlLabelWidths();\n        this.observers.push(elementVisible(this, () => this.setControlLabelWidths()));\n    }\n    updated(props) {\n        super.updated(props);\n        syncDefinedProps(props, this, this.controlsAndGroups);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.observers.forEach(o => o?.disconnect());\n    }\n    async setControlLabelWidths() {\n        if (this.layout === 'horizontal' || this.layout === 'horizontal-inline' || this.layout === 'compact') {\n            await childrenUpdateComplete(this.controlsAndGroups);\n            this.style.setProperty('--internal-label-min-width', await getLargestPrimaryLabelWidth(this.controlsAndGroups));\n            elementResize(this, () => this.style.setProperty('--internal-label-max-width', pxToRem(this.getBoundingClientRect().width)));\n        }\n    }\n    syncLayouts() {\n        this.addEventListener('layoutChange', (e) => {\n            e.preventDefault();\n            if (!this.overflowElement && isVerticalLayout(e.detail)) {\n                this.collapseForm(e.target);\n            }\n            if (e.target === this.overflowElement && !isVerticalLayout(e.detail)) {\n                this.expandForm(e.detail);\n            }\n        });\n    }\n    collapseForm(control) {\n        this.overflowElement = control;\n        this.responsive = false;\n        this.layout = 'vertical';\n        control.updateComplete.then(() => (control.responsive = true));\n    }\n    expandForm(layout) {\n        this.responsive = true;\n        this.overflowElement = null;\n        this.layout = layout;\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsFormGroup.prototype, \"layout\", void 0);\n__decorate([\n    property({ type: String })\n], CdsFormGroup.prototype, \"controlWidth\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsFormGroup.prototype, \"responsive\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsFormGroup.prototype, \"validate\", void 0);\n__decorate([\n    querySlotAll('[cds-control]')\n], CdsFormGroup.prototype, \"controls\", void 0);\n__decorate([\n    querySlotAll('[cds-control-group]')\n], CdsFormGroup.prototype, \"groups\", void 0);\n"],"names":["CdsFormGroup","LitElement","constructor","super","this","layout","defaultFormLayout","responsive","validate","observers","controlsAndGroups","Array","from","groups","controls","styles","baseStyles","render","html","firstUpdated","props","syncLayouts","setControlLabelWidths","push","elementVisible","updated","syncDefinedProps","disconnectedCallback","forEach","o","disconnect","async","childrenUpdateComplete","style","setProperty","getLargestPrimaryLabelWidth","elementResize","pxToRem","getBoundingClientRect","width","addEventListener","e","preventDefault","overflowElement","isVerticalLayout","detail","collapseForm","target","expandForm","control","updateComplete","then","__decorate","property","type","String","prototype","Boolean","querySlotAll"],"mappings":"6ZAmCO,MAAMA,UAAqBC,EAC9BC,cACIC,oBAMAC,KAAKC,OAASC,EAKdF,KAAKG,YAAa,EAKlBH,KAAKI,UAAW,EAChBJ,KAAKK,UAAY,GAEjBC,wBACA,MAAO,IAAIC,MAAMC,KAAKR,KAAKS,WAAYF,MAAMC,KAAKR,KAAKU,WAEhDC,oBACP,MAAO,CAACC,EAAYD,GAExBE,SACI,OAAOC,CAAK,sDACuD,YAAhBd,KAAKC,OAAuB,KAAO,4BAK1Fc,aAAaC,GACTjB,MAAMgB,aAAaC,GACnBhB,KAAKiB,cACLjB,KAAKkB,wBACLlB,KAAKK,UAAUc,KAAKC,EAAepB,MAAM,IAAMA,KAAKkB,2BAExDG,QAAQL,GACJjB,MAAMsB,QAAQL,GACdM,EAAiBN,EAAOhB,KAAMA,KAAKM,mBAEvCiB,uBACIxB,MAAMwB,uBACNvB,KAAKK,UAAUmB,SAAQC,GAAKA,GAAGC,eAEnCC,8BACwB,eAAhB3B,KAAKC,QAA2C,sBAAhBD,KAAKC,QAAkD,YAAhBD,KAAKC,eACtE2B,EAAuB5B,KAAKM,mBAClCN,KAAK6B,MAAMC,YAAY,mCAAoCC,EAA4B/B,KAAKM,oBAC5F0B,EAAchC,MAAM,IAAMA,KAAK6B,MAAMC,YAAY,6BAA8BG,EAAQjC,KAAKkC,wBAAwBC,WAG5HlB,cACIjB,KAAKoC,iBAAiB,gBAAiBC,IACnCA,EAAEC,kBACGtC,KAAKuC,iBAAmBC,EAAiBH,EAAEI,SAC5CzC,KAAK0C,aAAaL,EAAEM,QAEpBN,EAAEM,SAAW3C,KAAKuC,iBAAoBC,EAAiBH,EAAEI,SACzDzC,KAAK4C,WAAWP,EAAEI,WAI9BC,aAAaG,GACT7C,KAAKuC,gBAAkBM,EACvB7C,KAAKG,YAAa,EAClBH,KAAKC,OAAS,WACd4C,EAAQC,eAAeC,MAAK,IAAOF,EAAQ1C,YAAa,IAE5DyC,WAAW3C,GACPD,KAAKG,YAAa,EAClBH,KAAKuC,gBAAkB,KACvBvC,KAAKC,OAASA,GAGtB+C,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBvD,EAAawD,UAAW,cAAU,GACrCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBvD,EAAawD,UAAW,oBAAgB,GAC3CJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,WAClBzD,EAAawD,UAAW,kBAAc,GACzCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,WAClBzD,EAAawD,UAAW,gBAAY,GACvCJ,EAAW,CACPM,EAAa,kBACd1D,EAAawD,UAAW,gBAAY,GACvCJ,EAAW,CACPM,EAAa,wBACd1D,EAAawD,UAAW,cAAU"}