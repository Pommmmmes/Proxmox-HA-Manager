{"version":3,"file":"tree.element.js","sources":["../../../src/tree-view/tree.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { arrayHead, arrayTail, baseStyles, isVisible, nextInArray, onAnyKey, onKey, previousInArray, property, querySlot, querySlotAll, syncProps, } from '@cds/core/internal';\nimport { html, LitElement } from 'lit';\nimport { CdsTreeItem } from './tree-item.element.js';\nimport styles from './tree.element.scss';\n/**\n * Tree view is a hierarchical component that gives users access to a hierarchical set of objects displayed in a the parent-child relationship.\n *\n * ```typescript\n * import '@cds/core/tree-view/register.js';\n * ```\n *\n * ```html\n *  <cds-tree>\n *    <cds-tree-item>1</cds-tree-item>\n *    <cds-tree-item>2</cds-tree-item>\n *    <cds-tree-item>3</cds-tree-item>\n *  </cds-tree>\n * ```\n *\n * @element cds-tree\n * @slot - Content slot for inside the tree\n */\nexport class CdsTree extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.multiSelect = false;\n        this.keyboardNavigationHandler = (e) => {\n            const current = this.currentActiveItem;\n            if (current && current instanceof CdsTreeItem) {\n                onAnyKey(['arrow-left', 'arrow-right', 'arrow-up', 'arrow-down', 'home', 'end', 'enter', 'space'], e, () => {\n                    // prevent element container scroll\n                    // MDN references this is really the only way to prevent native browser interactions\n                    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n                    e.preventDefault();\n                });\n                onKey('arrow-left', e, () => {\n                    if (current.expandable && current.expanded) {\n                        current.expandedChange.emit(false);\n                    }\n                    else {\n                        const parentNode = current.parentElement;\n                        if (parentNode && parentNode instanceof CdsTreeItem) {\n                            this.setAriaActiveDescendant(parentNode);\n                        }\n                    }\n                });\n                onKey('arrow-right', e, () => {\n                    if (current.expandable) {\n                        if (current.expanded) {\n                            this.setAriaActiveDescendant(nextInArray(current, this.visibleChildren));\n                        }\n                        else {\n                            current.expandedChange.emit(true);\n                        }\n                    }\n                });\n                onKey('arrow-down', e, () => {\n                    if (current) {\n                        this.setAriaActiveDescendant(nextInArray(current, this.visibleChildren));\n                    }\n                });\n                onKey('arrow-up', e, () => {\n                    if (current) {\n                        this.setAriaActiveDescendant(previousInArray(current, this.visibleChildren));\n                    }\n                });\n                onKey('home', e, () => {\n                    if (current) {\n                        this.setAriaActiveDescendant(arrayHead(this.visibleChildren));\n                    }\n                });\n                onKey('end', e, () => {\n                    if (current) {\n                        this.setAriaActiveDescendant(arrayTail(this.visibleChildren));\n                    }\n                });\n                onKey('enter', e, () => {\n                    // activate onclick if link: https://www.w3.org/TR/wai-aria-practices/examples/treeview/treeview-2/treeview-2a.html\n                    // this means a treeview item should not be expandable AND contain an anchor tag at the same time\n                    if (current.anchorLink) {\n                        current.anchorLink.click();\n                    }\n                    if (current.expandable) {\n                        current.expandedChange.emit(!current.expanded);\n                    }\n                });\n                onKey('space', e, () => {\n                    // activate onclick if link: https://www.w3.org/TR/wai-aria-practices/examples/treeview/treeview-2/treeview-2a.html\n                    // this means a treeview item should not be expandable AND contain an anchor tag at the same time\n                    if (current.anchorLink) {\n                        current.anchorLink.click();\n                    }\n                    if (current && !current.disabled) {\n                        current.selectedChange.emit(!current.selected);\n                    }\n                });\n            }\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.tabIndex = 0;\n        this.role = 'tree';\n        this.addEventListener('focus', this.initAriaActiveDescendant);\n        this.addEventListener('click', this.clickHandler);\n        this.addEventListener('keydown', this.keyboardNavigationHandler);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n    }\n    updated(props) {\n        super.updated(props);\n        this.ariaMultiSelectable = this.multiSelect ? 'true' : 'false';\n        this.childrenItems.forEach(c => syncProps(c, this, { multiSelect: this.multiSelect }));\n    }\n    clickHandler(e) {\n        if (e.target instanceof CdsTreeItem) {\n            const match = this.visibleChildren.find(c => c === e.target);\n            if (match) {\n                this.setAriaActiveDescendant(match);\n            }\n        }\n    }\n    get currentActiveItem() {\n        return this.visibleChildren.find(c => c.id === this.ariaActiveDescendant);\n    }\n    /**\n     * The reason why we wait till onfocus to initialize aria-activedescendant is to\n     * account for lazy loaded children.\n     * */\n    initAriaActiveDescendant() {\n        if (!this.currentActiveItem) {\n            // If none of the nodes are selected before the tree receives focus, focus is set on the first node.\n            // If one or more nodes are selected before the tree receives focus, focus is set on the first selected node.\n            const focusableChild = this.visibleChildren.find(c => c.selected) || this.firstChildItem;\n            if (focusableChild) {\n                this.setAriaActiveDescendant(focusableChild);\n            }\n        }\n    }\n    setAriaActiveDescendant(activeItem) {\n        if (activeItem) {\n            this.ariaActiveDescendant = activeItem.id;\n            activeItem.focus();\n        }\n    }\n    /** @private */\n    get visibleChildren() {\n        return Array.from(this.childrenItems).filter(n => isVisible(n));\n    }\n    render() {\n        return html `<slot></slot>`;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n}\n__decorate([\n    property({ type: Boolean, attribute: 'multi-select' })\n], CdsTree.prototype, \"multiSelect\", void 0);\n__decorate([\n    querySlot('cds-tree-item')\n], CdsTree.prototype, \"firstChildItem\", void 0);\n__decorate([\n    querySlotAll('cds-tree-item')\n], CdsTree.prototype, \"childrenItems\", void 0);\n"],"names":["CdsTree","LitElement","constructor","super","this","multiSelect","keyboardNavigationHandler","e","current","currentActiveItem","CdsTreeItem","onAnyKey","preventDefault","onKey","expandable","expanded","expandedChange","emit","parentNode","parentElement","setAriaActiveDescendant","nextInArray","visibleChildren","previousInArray","arrayHead","arrayTail","anchorLink","click","disabled","selectedChange","selected","connectedCallback","tabIndex","role","addEventListener","initAriaActiveDescendant","clickHandler","disconnectedCallback","updated","props","ariaMultiSelectable","childrenItems","forEach","c","syncProps","target","match","find","id","ariaActiveDescendant","focusableChild","firstChildItem","activeItem","focus","Array","from","filter","n","isVisible","render","html","styles","baseStyles","__decorate","property","type","Boolean","attribute","prototype","querySlot","querySlotAll"],"mappings":"mYA4BO,MAAMA,UAAgBC,EACzBC,cACIC,oBACAC,KAAKC,aAAc,EACnBD,KAAKE,0BAA6BC,IAC9B,MAAMC,EAAUJ,KAAKK,kBACjBD,GAAWA,aAAmBE,IAC9BC,EAAS,CAAC,aAAc,cAAe,WAAY,aAAc,OAAQ,MAAO,QAAS,SAAUJ,GAAG,KAIlGA,EAAEK,oBAENC,EAAM,aAAcN,GAAG,KACnB,GAAIC,EAAQM,YAAcN,EAAQO,SAC9BP,EAAQQ,eAAeC,MAAK,OAE3B,CACD,MAAMC,EAAaV,EAAQW,cACvBD,GAAcA,aAAsBR,GACpCN,KAAKgB,wBAAwBF,OAIzCL,EAAM,cAAeN,GAAG,KAChBC,EAAQM,aACJN,EAAQO,SACRX,KAAKgB,wBAAwBC,EAAYb,EAASJ,KAAKkB,kBAGvDd,EAAQQ,eAAeC,MAAK,OAIxCJ,EAAM,aAAcN,GAAG,KACfC,GACAJ,KAAKgB,wBAAwBC,EAAYb,EAASJ,KAAKkB,qBAG/DT,EAAM,WAAYN,GAAG,KACbC,GACAJ,KAAKgB,wBAAwBG,EAAgBf,EAASJ,KAAKkB,qBAGnET,EAAM,OAAQN,GAAG,KACTC,GACAJ,KAAKgB,wBAAwBI,EAAUpB,KAAKkB,qBAGpDT,EAAM,MAAON,GAAG,KACRC,GACAJ,KAAKgB,wBAAwBK,EAAUrB,KAAKkB,qBAGpDT,EAAM,QAASN,GAAG,KAGVC,EAAQkB,YACRlB,EAAQkB,WAAWC,QAEnBnB,EAAQM,YACRN,EAAQQ,eAAeC,MAAMT,EAAQO,aAG7CF,EAAM,QAASN,GAAG,KAGVC,EAAQkB,YACRlB,EAAQkB,WAAWC,QAEnBnB,IAAYA,EAAQoB,UACpBpB,EAAQqB,eAAeZ,MAAMT,EAAQsB,eAMzDC,oBACI5B,MAAM4B,oBACN3B,KAAK4B,SAAW,EAChB5B,KAAK6B,KAAO,OACZ7B,KAAK8B,iBAAiB,QAAS9B,KAAK+B,0BACpC/B,KAAK8B,iBAAiB,QAAS9B,KAAKgC,cACpChC,KAAK8B,iBAAiB,UAAW9B,KAAKE,2BAE1C+B,uBACIlC,MAAMkC,uBAEVC,QAAQC,GACJpC,MAAMmC,QAAQC,GACdnC,KAAKoC,oBAAsBpC,KAAKC,YAAc,OAAS,QACvDD,KAAKqC,cAAcC,SAAQC,GAAKC,EAAUD,EAAGvC,KAAM,CAAEC,YAAaD,KAAKC,gBAE3E+B,aAAa7B,GACT,GAAIA,EAAEsC,kBAAkBnC,EAAa,CACjC,MAAMoC,EAAQ1C,KAAKkB,gBAAgByB,MAAKJ,GAAKA,IAAMpC,EAAEsC,SACjDC,GACA1C,KAAKgB,wBAAwB0B,IAIrCrC,wBACA,OAAOL,KAAKkB,gBAAgByB,MAAKJ,GAAKA,EAAEK,KAAO5C,KAAK6C,uBAMxDd,2BACI,IAAK/B,KAAKK,kBAAmB,CAGzB,MAAMyC,EAAiB9C,KAAKkB,gBAAgByB,MAAKJ,GAAKA,EAAEb,YAAa1B,KAAK+C,eACtED,GACA9C,KAAKgB,wBAAwB8B,IAIzC9B,wBAAwBgC,GAChBA,IACAhD,KAAK6C,qBAAuBG,EAAWJ,GACvCI,EAAWC,SAIf/B,sBACA,OAAOgC,MAAMC,KAAKnD,KAAKqC,eAAee,QAAOC,GAAKC,EAAUD,KAEhEE,SACI,OAAOC,CAAK,gBAELC,oBACP,MAAO,CAACC,EAAYD,IAG5BE,EAAW,CACPC,EAAS,CAAEC,KAAMC,QAASC,UAAW,kBACtCnE,EAAQoE,UAAW,mBAAe,GACrCL,EAAW,CACPM,EAAU,kBACXrE,EAAQoE,UAAW,sBAAkB,GACxCL,EAAW,CACPO,EAAa,kBACdtE,EAAQoE,UAAW,qBAAiB"}