{"version":3,"file":"grid-pagination.element.js","sources":["../../../../src/grid/pagination/grid-pagination.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement, html } from 'lit';\nimport { baseStyles, i18n, I18nService, property, event } from '@cds/core/internal';\nimport styles from './grid-pagination.element.scss';\n/**\n * Grid Pagination\n *\n * ```typescript\n * import '@cds/core/grid/register.js';\n * ```\n *\n * ```html\n * <cds-grid-pagination></cds-grid-pagination>\n * ```\n *\n * @internal\n * @element cds-grid-pagination\n * @event pageChange\n * @event pageSizeChange\n */\nexport class CdsGridPagination extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.i18n = I18nService.keys.grid;\n        this.page = 0;\n        this.pageSize = 10;\n        this.pageCount = 1;\n        this.pageSizeOptions = [10, 20, 50, 100];\n    }\n    render() {\n        return html `\n      <cds-pagination .ariaLabel=${this.i18n.pagination.label}>\n        <cds-select control-width=\"shrink\">\n          <select\n            .value=${this.pageSize.toString()}\n            .ariaLabel=${this.i18n.pagination.pageSize}\n            @input=${(e) => this.pageSizeChange.emit(parseInt(e.target.value))}\n          >\n            ${this.pageSizeOptions.map(i => html `<option value=${i} ?selected=${i === this.pageSize}>${i}</option>`)}\n          </select>\n        </cds-select>\n        <cds-pagination-button\n          .ariaLabel=${this.i18n.pagination.firstPage}\n          .disabled=${this.page === 0}\n          action=\"first\"\n          @click=${this.firstPage}\n        ></cds-pagination-button>\n        <cds-pagination-button\n          .ariaLabel=${this.i18n.pagination.previousPage}\n          .disabled=${this.page === 0}\n          action=\"prev\"\n          @click=${this.prevPage}\n        ></cds-pagination-button>\n        <cds-input cds-pagination-number>\n          <input\n            type=\"number\"\n            .ariaLabel=${`${this.i18n.pagination.page} ${this.page} of ${this.pageCount}`}\n            @input=${this.setPage}\n            .valueAsNumber=${this.page + 1}\n            min=\"1\"\n            max=${this.pageCount}\n          />\n          <cds-control-message><span aria-hidden=\"true\">/ ${this.pageCount}</span></cds-control-message>\n        </cds-input>\n        <cds-pagination-button\n          .ariaLabel=${this.i18n.pagination.nextPage}\n          ?disabled=${this.page === this.pageCount - 1}\n          action=\"next\"\n          @click=${this.nextPage}\n        ></cds-pagination-button>\n        <cds-pagination-button\n          .ariaLabel=${this.i18n.pagination.lastPage}\n          ?disabled=${this.page === this.pageCount - 1}\n          action=\"last\"\n          @click=${this.lastPage}\n        ></cds-pagination-button>\n      </cds-pagination>\n    `;\n    }\n    setPage(event) {\n        this.pageChange.emit(event.target.valueAsNumber - 1);\n    }\n    nextPage() {\n        this.pageChange.emit(this.page + 1);\n    }\n    prevPage() {\n        this.pageChange.emit(this.page - 1);\n    }\n    firstPage() {\n        this.pageChange.emit(0);\n    }\n    lastPage() {\n        this.pageChange.emit(this.pageCount - 1);\n    }\n}\nCdsGridPagination.styles = [baseStyles, styles];\n__decorate([\n    i18n()\n], CdsGridPagination.prototype, \"i18n\", void 0);\n__decorate([\n    property({ type: Number })\n], CdsGridPagination.prototype, \"page\", void 0);\n__decorate([\n    property({ type: Number })\n], CdsGridPagination.prototype, \"pageSize\", void 0);\n__decorate([\n    property({ type: Number })\n], CdsGridPagination.prototype, \"pageCount\", void 0);\n__decorate([\n    property({ type: Array })\n], CdsGridPagination.prototype, \"pageSizeOptions\", void 0);\n__decorate([\n    event()\n], CdsGridPagination.prototype, \"pageChange\", void 0);\n__decorate([\n    event()\n], CdsGridPagination.prototype, \"pageSizeChange\", void 0);\n"],"names":["CdsGridPagination","LitElement","constructor","super","this","i18n","I18nService","keys","grid","page","pageSize","pageCount","pageSizeOptions","render","html","pagination","label","toString","e","pageSizeChange","emit","parseInt","target","value","map","i","firstPage","previousPage","prevPage","setPage","nextPage","lastPage","event","pageChange","valueAsNumber","styles","baseStyles","__decorate","prototype","property","type","Number","Array"],"mappings":"mOAyBO,MAAMA,UAA0BC,EACnCC,cACIC,oBACAC,KAAKC,KAAOC,EAAYC,KAAKC,KAC7BJ,KAAKK,KAAO,EACZL,KAAKM,SAAW,GAChBN,KAAKO,UAAY,EACjBP,KAAKQ,gBAAkB,CAAC,GAAI,GAAI,GAAI,KAExCC,SACI,OAAOC,CAAK,+BACeV,KAAKC,KAAKU,WAAWC,6DAGnCZ,KAAKM,SAASO,2BACVb,KAAKC,KAAKU,WAAWL,qBACxBQ,GAAMd,KAAKe,eAAeC,KAAKC,SAASH,EAAEI,OAAOC,YAEzDnB,KAAKQ,gBAAgBY,KAAIC,GAAKX,CAAK,kBAAiBW,iBAAeA,IAAMrB,KAAKM,aAAYe,0EAIjFrB,KAAKC,KAAKU,WAAWW,yBACR,IAAdtB,KAAKK,gCAERL,KAAKsB,yEAGDtB,KAAKC,KAAKU,WAAWY,4BACR,IAAdvB,KAAKK,+BAERL,KAAKwB,uGAKC,GAAGxB,KAAKC,KAAKU,WAAWN,QAAQL,KAAKK,WAAWL,KAAKO,wBACzDP,KAAKyB,4BACGzB,KAAKK,KAAO,mBAEvBL,KAAKO,8DAEqCP,KAAKO,wFAG1CP,KAAKC,KAAKU,WAAWe,wBACtB1B,KAAKK,OAASL,KAAKO,UAAY,4BAElCP,KAAK0B,wEAGD1B,KAAKC,KAAKU,WAAWgB,wBACtB3B,KAAKK,OAASL,KAAKO,UAAY,4BAElCP,KAAK2B,sDAKpBF,QAAQG,GACJ5B,KAAK6B,WAAWb,KAAKY,EAAMV,OAAOY,cAAgB,GAEtDJ,WACI1B,KAAK6B,WAAWb,KAAKhB,KAAKK,KAAO,GAErCmB,WACIxB,KAAK6B,WAAWb,KAAKhB,KAAKK,KAAO,GAErCiB,YACItB,KAAK6B,WAAWb,KAAK,GAEzBW,WACI3B,KAAK6B,WAAWb,KAAKhB,KAAKO,UAAY,IAG9CX,EAAkBmC,OAAS,CAACC,EAAYD,GACxCE,EAAW,CACPhC,KACDL,EAAkBsC,UAAW,YAAQ,GACxCD,EAAW,CACPE,EAAS,CAAEC,KAAMC,UAClBzC,EAAkBsC,UAAW,YAAQ,GACxCD,EAAW,CACPE,EAAS,CAAEC,KAAMC,UAClBzC,EAAkBsC,UAAW,gBAAY,GAC5CD,EAAW,CACPE,EAAS,CAAEC,KAAMC,UAClBzC,EAAkBsC,UAAW,iBAAa,GAC7CD,EAAW,CACPE,EAAS,CAAEC,KAAME,SAClB1C,EAAkBsC,UAAW,uBAAmB,GACnDD,EAAW,CACPL,KACDhC,EAAkBsC,UAAW,kBAAc,GAC9CD,EAAW,CACPL,KACDhC,EAAkBsC,UAAW,sBAAkB"}