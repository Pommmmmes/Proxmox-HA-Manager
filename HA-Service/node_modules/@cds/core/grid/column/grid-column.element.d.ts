import { LitElement } from 'lit';
import { EventEmitter } from '@cds/core/internal';
import { GridColumnSizeController } from './grid-column-size.controller.js';
import { GridColumnPositionController } from './grid-column-position.controller.js';
/**
 * Grid Column
 *
 * ```typescript
 * import '@cds/core/grid/register.js';
 * ```
 *
 * @internal
 * @element cds-grid-column
 * @event resizeChange - notifies when column has been resized
 * @cssprop --min-height
 * @cssprop --min-width
 * @cssprop --justify-content
 * @cssprop --padding-block
 * @cssprop --padding-inline-start
 * @cssprop --padding-inline-end
 */
export declare class CdsGridColumn extends LitElement {
    i18n: {
        resizeColumn: string;
        closeDetails: string;
        noData: string;
        rowDetailStart: string;
        rowDetailEnd: string;
        footerEnd: string;
        action: string;
        dropTarget: string;
        pagination: {
            label: string;
            firstPage: string;
            previousPage: string;
            nextPage: string;
            lastPage: string;
            pageSize: string;
            page: string;
        };
    };
    width: string;
    resizable: boolean;
    type: '' | 'action';
    position: '' | 'sticky' | 'fixed';
    resizeChange: EventEmitter<number>;
    protected gridColumnSizeController: GridColumnSizeController;
    protected gridColumnPositionController: GridColumnPositionController;
    private get grid();
    static styles: import("lit").CSSResultGroup[];
    render(): import("lit-html").TemplateResult<1>;
    connectedCallback(): void;
}
