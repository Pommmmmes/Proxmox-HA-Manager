{"version":3,"file":"grid-column-size.controller.js","sources":["../../../../src/grid/column/grid-column-size.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isNumericString, listenForAttributeListChange, onFirstInteraction } from '@cds/core/internal';\nexport class GridColumnSizeController {\n    constructor(host) {\n        this.host = host;\n        this.observers = [];\n        this.host.addController(this);\n    }\n    get hostGrid() {\n        return this.host.parentElement;\n    }\n    get hostRange() {\n        return this.host.shadowRoot?.querySelector('cds-internal-split-handle input');\n    }\n    async hostConnected() {\n        this.setActionWidth();\n        this.hostGrid.shadowRoot?.addEventListener('slotchange', () => this.setActionWidth());\n        this.observers.push(listenForAttributeListChange(this.host, ['type'], () => this.setActionWidth()));\n        await this.host.updateComplete;\n        await onFirstInteraction(this.hostGrid);\n        if (this.hostRange) {\n            this.hostRange.max = `${parseInt(getComputedStyle(this.hostGrid).width)}`;\n            this.hostRange.value = `${parseInt(getComputedStyle(this.host).width)}`;\n            this.hostRange.addEventListener('input', (e) => this.updateResizedColumnWidth(e.target.valueAsNumber));\n            this.hostRange.addEventListener('change', (e) => this.updateResizedColumnWidth(e.target.valueAsNumber));\n        }\n    }\n    async hostUpdated() {\n        await this.host.updateComplete;\n        this.updateSetColumnWidth();\n    }\n    hostDisconnected() {\n        this.observers.forEach(o => o?.disconnect());\n    }\n    setActionWidth() {\n        if (this.host.type === 'action' || this.host.getAttribute('type') === 'action') {\n            this.host.width = '36px';\n            const index = Array.from(this.hostGrid.columns).indexOf(this.host);\n            this.hostGrid.rows.forEach(r => r.cells[index].setAttribute('type', 'action'));\n        }\n    }\n    updateSetColumnWidth() {\n        if (this.host.width && this.host.ariaColIndex !== undefined) {\n            this.hostGrid.style.setProperty(`--ch${this.host.ariaColIndex}`, isNumericString(this.host.width) ? `${this.host.width}px` : this.host.width);\n            if (this.hostRange) {\n                this.hostRange.min = `${parseInt(this.host.width)}` ?? '';\n                this.hostRange.value = this.host.width;\n            }\n        }\n    }\n    updateResizedColumnWidth(width) {\n        this.host.dispatchEvent(new CustomEvent('resizeChange', { detail: width, bubbles: true }));\n        const updatedWidth = Math.max(isNumericString(this.host.width) || this.host.width?.includes('px') ? parseInt(this.host.width) : 36, width);\n        this.hostGrid.style.setProperty(`--ch${this.host.ariaColIndex}`, `${updatedWidth}px`);\n    }\n}\n"],"names":["GridColumnSizeController","constructor","host","this","observers","addController","hostGrid","parentElement","hostRange","shadowRoot","querySelector","async","setActionWidth","addEventListener","push","listenForAttributeListChange","updateComplete","onFirstInteraction","max","parseInt","getComputedStyle","width","value","e","updateResizedColumnWidth","target","valueAsNumber","updateSetColumnWidth","hostDisconnected","forEach","o","disconnect","type","getAttribute","index","Array","from","columns","indexOf","rows","r","cells","setAttribute","undefined","ariaColIndex","style","setProperty","isNumericString","min","dispatchEvent","CustomEvent","detail","bubbles","updatedWidth","Math","includes"],"mappings":"+GAMO,MAAMA,EACTC,YAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,GACjBD,KAAKD,KAAKG,cAAcF,MAExBG,eACA,OAAOH,KAAKD,KAAKK,cAEjBC,gBACA,OAAOL,KAAKD,KAAKO,YAAYC,cAAc,mCAE/CC,sBACIR,KAAKS,iBACLT,KAAKG,SAASG,YAAYI,iBAAiB,cAAc,IAAMV,KAAKS,mBACpET,KAAKC,UAAUU,KAAKC,EAA6BZ,KAAKD,KAAM,CAAC,SAAS,IAAMC,KAAKS,0BAC3ET,KAAKD,KAAKc,qBACVC,EAAmBd,KAAKG,UAC1BH,KAAKK,YACLL,KAAKK,UAAUU,IAAM,GAAGC,SAASC,iBAAiBjB,KAAKG,UAAUe,OACjElB,KAAKK,UAAUc,MAAQ,GAAGH,SAASC,iBAAiBjB,KAAKD,MAAMmB,OAC/DlB,KAAKK,UAAUK,iBAAiB,SAAUU,GAAMpB,KAAKqB,yBAAyBD,EAAEE,OAAOC,iBACvFvB,KAAKK,UAAUK,iBAAiB,UAAWU,GAAMpB,KAAKqB,yBAAyBD,EAAEE,OAAOC,kBAGhGf,0BACUR,KAAKD,KAAKc,eAChBb,KAAKwB,uBAETC,mBACIzB,KAAKC,UAAUyB,SAAQC,GAAKA,GAAGC,eAEnCnB,iBACI,GAAuB,WAAnBT,KAAKD,KAAK8B,MAAwD,WAAnC7B,KAAKD,KAAK+B,aAAa,QAAsB,CAC5E9B,KAAKD,KAAKmB,MAAQ,OAClB,MAAMa,EAAQC,MAAMC,KAAKjC,KAAKG,SAAS+B,SAASC,QAAQnC,KAAKD,MAC7DC,KAAKG,SAASiC,KAAKV,SAAQW,GAAKA,EAAEC,MAAMP,GAAOQ,aAAa,OAAQ,aAG5Ef,uBACQxB,KAAKD,KAAKmB,YAAoCsB,IAA3BxC,KAAKD,KAAK0C,eAC7BzC,KAAKG,SAASuC,MAAMC,YAAY,OAAO3C,KAAKD,KAAK0C,aAAgBG,EAAgB5C,KAAKD,KAAKmB,OAAYlB,KAAKD,KAAKmB,MAAb,KAAyBlB,KAAKD,KAAKmB,OACnIlB,KAAKK,YACLL,KAAKK,UAAUwC,IAAM,GAAG7B,SAAShB,KAAKD,KAAKmB,QAAY,GACvDlB,KAAKK,UAAUc,MAAQnB,KAAKD,KAAKmB,QAI7CG,yBAAyBH,GACrBlB,KAAKD,KAAK+C,cAAc,IAAIC,YAAY,eAAgB,CAAEC,OAAQ9B,EAAO+B,SAAS,KAClF,MAAMC,EAAeC,KAAKpC,IAAI6B,EAAgB5C,KAAKD,KAAKmB,QAAUlB,KAAKD,KAAKmB,OAAOkC,SAAS,MAAQpC,SAAShB,KAAKD,KAAKmB,OAAS,GAAIA,GACpIlB,KAAKG,SAASuC,MAAMC,YAAY,OAAO3C,KAAKD,KAAK0C,aAAmBS,EAAH"}