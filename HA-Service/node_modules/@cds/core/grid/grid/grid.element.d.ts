import { LitElement } from 'lit';
import { AriaGridController } from '@cds/core/internal';
import { CdsGridRow } from '../row/grid-row.element.js';
import { CdsGridCell } from '../cell/grid-cell.element.js';
import { CdsGridColumn } from '../column/grid-column.element.js';
import { GridLayoutController } from './grid-layout.controller.js';
import { CdsGridPlaceholder } from '../placeholder/grid-placeholder.element.js';
/**
 * Grid
 *
 * ```typescript
 * import '@cds/core/grid/register.js';
 * ```
 *
 * @internal
 * @element cds-grid
 * @event rangeSelectionChange
 * @cssprop --background
 * @cssprop --body-height
 * @cssprop --scrollbar-background
 * @cssprop --scrollbar-thumb-background
 * @cssprop --column-height
 * @cssprop --row-height
 * @cssprop --scroll-padding-top
 * @cssprop --row-content-visibility
 * @cssprop --column-text-align
 * @cssprop --cell-text-algin
 */
export declare class CdsGrid extends LitElement {
    i18n: {
        resizeColumn: string;
        closeDetails: string;
        noData: string;
        rowDetailStart: string;
        rowDetailEnd: string;
        footerEnd: string;
        action: string;
        dropTarget: string;
        pagination: {
            label: string;
            firstPage: string;
            previousPage: string;
            nextPage: string;
            lastPage: string;
            pageSize: string;
            page: string;
        };
    };
    columnLayout: 'fixed' | 'flex';
    height: string;
    border: 'row' | 'cell' | 'column' | 'none' | 'stripe';
    selectable: 'multi' | 'single' | null;
    rangeSelection: boolean;
    scrollLock: boolean;
    protected _id: string;
    protected ariaGridController: AriaGridController<this>;
    protected gridLayoutController: GridLayoutController;
    static styles: import("lit").CSSResultGroup[];
    readonly columnRowGroup: HTMLElement;
    readonly columnRow: HTMLElement;
    readonly columns: NodeListOf<CdsGridColumn>;
    readonly rowGroup: HTMLElement;
    readonly rows: NodeListOf<CdsGridRow>;
    readonly cells: NodeListOf<CdsGridCell>;
    readonly footerRowGroup: HTMLElement;
    readonly footerRow: HTMLElement;
    readonly footerCells: NodeListOf<HTMLElement>;
    readonly placeholder: CdsGridPlaceholder;
    readonly keyNavGrid: HTMLElement;
    get placeholderCell(): HTMLElement;
    readonly grid: this;
    render(): import("lit-html").TemplateResult<1>;
}
