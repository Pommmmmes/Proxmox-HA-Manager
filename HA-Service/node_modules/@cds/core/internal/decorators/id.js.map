{"version":3,"file":"id.js","sources":["../../../../src/internal/decorators/id.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { createId } from './../utils/identity.js';\nconst legacyId = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardId = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nexport function id() {\n    return (protoOrDescriptor, name) => {\n        const descriptor = {\n            get() {\n                const propertyName = name !== undefined ? name : protoOrDescriptor.key;\n                if (!this[`__${propertyName}`]) {\n                    // _ is used to ensure number is not first since this can create an invalid css selector\n                    this[`__${propertyName}`] = createId();\n                }\n                return this[`__${propertyName}`];\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return name !== undefined\n            ? legacyId(descriptor, protoOrDescriptor, name)\n            : standardId(descriptor, protoOrDescriptor);\n    };\n}\n"],"names":["id","protoOrDescriptor","name","descriptor","get","propertyName","undefined","key","this","createId","enumerable","configurable","proto","Object","defineProperty","legacyId","element","kind","placement","standardId"],"mappings":"gDAeO,SAASA,IACZ,MAAO,CAACC,EAAmBC,KACvB,MAAMC,EAAa,CACfC,MACI,MAAMC,OAAwBC,IAATJ,EAAqBA,EAAOD,EAAkBM,IAKnE,OAJKC,KAAK,KAAKH,KAEXG,KAAK,KAAKH,GAAkBI,KAEzBD,KAAK,KAAKH,IAErBK,YAAY,EACZC,cAAc,GAElB,YAAgBL,IAATJ,EAvBE,EAACC,EAAYS,EAAOV,KACjCW,OAAOC,eAAeF,EAAOV,EAAMC,IAuBzBY,CAASZ,EAAYF,EAAmBC,GArBnC,EAACC,EAAYa,MAC5BC,KAAM,SACNC,UAAW,YACXX,IAAKS,EAAQT,IACbJ,WAAAA,IAkBUgB,CAAWhB,EAAYF"}