{"version":3,"file":"global-style.js","sources":["../../../../src/internal/decorators/global-style.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n// Legacy TS Decorator\nfunction legacyEvent(descriptor, protoOrDescriptor, name) {\n    Object.defineProperty(protoOrDescriptor, name, descriptor);\n}\n// TC39 Decorators proposal\nfunction standardEvent(descriptor, element) {\n    return {\n        kind: 'method',\n        placement: 'prototype',\n        key: element.key,\n        descriptor,\n    };\n}\n/**\n * Appends a global `<style>` tag to the light DOM of a given custom element.\n * This is useful for when styles need to be applied that are not supported\n * withing a `::slotted()` selector such as ::-vendor style selectors.\n */\nexport function globalStyle() {\n    return (protoOrDescriptor, name) => {\n        const targetConnectedCallback = protoOrDescriptor.connectedCallback;\n        function connectedCallback() {\n            this[`__${name}StyleTag`] = document.createElement('style');\n            this.prepend(this[`__${name}StyleTag`]);\n            this[`__${name}StyleTag`].innerText = this[`__${name}GlobalStyle`].toString();\n            if (targetConnectedCallback) {\n                targetConnectedCallback.apply(this);\n            }\n        }\n        protoOrDescriptor.connectedCallback = connectedCallback;\n        const setter = function (value) {\n            this[`__${name}GlobalStyle`] = value;\n        };\n        const descriptor = {\n            set: setter,\n            enumerable: true,\n            configurable: true,\n        };\n        return name !== undefined\n            ? legacyEvent(descriptor, protoOrDescriptor, name)\n            : standardEvent(descriptor, protoOrDescriptor);\n    };\n}\n"],"names":["globalStyle","protoOrDescriptor","name","targetConnectedCallback","connectedCallback","this","document","createElement","prepend","innerText","toString","apply","descriptor","set","value","enumerable","configurable","undefined","Object","defineProperty","legacyEvent","element","kind","placement","key","standardEvent"],"mappings":"AAuBO,SAASA,IACZ,MAAO,CAACC,EAAmBC,KACvB,MAAMC,EAA0BF,EAAkBG,kBASlDH,EAAkBG,kBARlB,WACIC,KAAK,KAAKH,aAAkBI,SAASC,cAAc,SACnDF,KAAKG,QAAQH,KAAK,KAAKH,cACvBG,KAAK,KAAKH,aAAgBO,UAAYJ,KAAK,KAAKH,gBAAmBQ,WAC/DP,GACAA,EAAwBQ,MAAMN,OAItC,MAGMO,EAAa,CACfC,IAJW,SAAUC,GACrBT,KAAK,KAAKH,gBAAqBY,GAI/BC,YAAY,EACZC,cAAc,GAElB,YAAgBC,IAATf,EArCf,SAAqBU,EAAYX,EAAmBC,GAChDgB,OAAOC,eAAelB,EAAmBC,EAAMU,GAqCrCQ,CAAYR,EAAYX,EAAmBC,GAlCzD,SAAuBU,EAAYS,GAC/B,MAAO,CACHC,KAAM,SACNC,UAAW,YACXC,IAAKH,EAAQG,IACbZ,WAAAA,GA8BMa,CAAcb,EAAYX"}