{"version":3,"file":"touch.controller.js","sources":["../../../../src/internal/controllers/touch.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { getOffesetDifference } from '../utils/math.js';\n/**\n * @internal Provides all nessesary events for basic touch gestures\n *\n * @event cdsTouchStart\n * @event cdsTouchMove\n * @event cdsTouchEnd\n */\nexport function touch() {\n    return (target) => target.addInitializer((instance) => new TouchController(instance));\n}\nexport class TouchController {\n    constructor(host) {\n        this.host = host;\n        this.moveHandler = this.move.bind(this);\n        this.endHandler = this.end.bind(this);\n        this.host.addController(this);\n    }\n    async hostConnected() {\n        await this.host.updateComplete;\n        this.host.addEventListener('pointerdown', (e) => this.start(e), { passive: true });\n    }\n    start(e) {\n        if (e.composedPath().find((el) => el === this.host)) {\n            this.startPosition = { x: e.clientX, y: e.clientY };\n            document.addEventListener('pointerup', this.endHandler, { passive: true });\n            document.addEventListener('pointermove', this.moveHandler, { passive: true });\n            this.host.dispatchEvent(new CustomEvent('cdsTouchStart', { detail: { ...this.startPosition } }));\n        }\n    }\n    end(e) {\n        if (this.startPosition) {\n            const detail = this.getCoordinates(e);\n            document.removeEventListener('pointerup', this.endHandler, false);\n            document.removeEventListener('pointermove', this.moveHandler, false);\n            this.host.dispatchEvent(new CustomEvent('cdsTouchEnd', { detail }));\n        }\n    }\n    move(e) {\n        requestAnimationFrame(() => {\n            const detail = this.getCoordinates(e);\n            this.startPosition = { x: e.clientX, y: e.clientY };\n            this.host.dispatchEvent(new CustomEvent('cdsTouchMove', { detail }));\n        });\n    }\n    getCoordinates(e) {\n        return {\n            x: e.clientX,\n            y: e.clientY,\n            offsetX: getOffesetDifference(this.startPosition.x, e.clientX),\n            offsetY: getOffesetDifference(this.startPosition.y, e.clientY),\n        };\n    }\n}\n"],"names":["touch","target","addInitializer","instance","TouchController","constructor","host","this","moveHandler","move","bind","endHandler","end","addController","async","updateComplete","addEventListener","e","start","passive","composedPath","find","el","startPosition","x","clientX","y","clientY","document","dispatchEvent","CustomEvent","detail","getCoordinates","removeEventListener","requestAnimationFrame","offsetX","getOffesetDifference","offsetY"],"mappings":"wDAaO,SAASA,IACZ,OAAQC,GAAWA,EAAOC,gBAAgBC,GAAa,IAAIC,EAAgBD,KAExE,MAAMC,EACTC,YAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,YAAcD,KAAKE,KAAKC,KAAKH,MAClCA,KAAKI,WAAaJ,KAAKK,IAAIF,KAAKH,MAChCA,KAAKD,KAAKO,cAAcN,MAE5BO,4BACUP,KAAKD,KAAKS,eAChBR,KAAKD,KAAKU,iBAAiB,eAAgBC,GAAMV,KAAKW,MAAMD,IAAI,CAAEE,SAAS,IAE/ED,MAAMD,GACEA,EAAEG,eAAeC,MAAMC,GAAOA,IAAOf,KAAKD,SAC1CC,KAAKgB,cAAgB,CAAEC,EAAGP,EAAEQ,QAASC,EAAGT,EAAEU,SAC1CC,SAASZ,iBAAiB,YAAaT,KAAKI,WAAY,CAAEQ,SAAS,IACnES,SAASZ,iBAAiB,cAAeT,KAAKC,YAAa,CAAEW,SAAS,IACtEZ,KAAKD,KAAKuB,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,OAAQ,IAAKxB,KAAKgB,mBAGrFX,IAAIK,GACA,GAAIV,KAAKgB,cAAe,CACpB,MAAMQ,EAASxB,KAAKyB,eAAef,GACnCW,SAASK,oBAAoB,YAAa1B,KAAKI,YAAY,GAC3DiB,SAASK,oBAAoB,cAAe1B,KAAKC,aAAa,GAC9DD,KAAKD,KAAKuB,cAAc,IAAIC,YAAY,cAAe,CAAEC,OAAAA,MAGjEtB,KAAKQ,GACDiB,uBAAsB,KAClB,MAAMH,EAASxB,KAAKyB,eAAef,GACnCV,KAAKgB,cAAgB,CAAEC,EAAGP,EAAEQ,QAASC,EAAGT,EAAEU,SAC1CpB,KAAKD,KAAKuB,cAAc,IAAIC,YAAY,eAAgB,CAAEC,OAAAA,QAGlEC,eAAef,GACX,MAAO,CACHO,EAAGP,EAAEQ,QACLC,EAAGT,EAAEU,QACLQ,QAASC,EAAqB7B,KAAKgB,cAAcC,EAAGP,EAAEQ,SACtDY,QAASD,EAAqB7B,KAAKgB,cAAcG,EAAGT,EAAEU"}