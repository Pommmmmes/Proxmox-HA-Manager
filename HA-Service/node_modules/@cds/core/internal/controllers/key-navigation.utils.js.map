{"version":3,"file":"key-navigation.utils.js","sources":["../../../../src/internal/controllers/key-navigation.utils.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { KeyNavigationCode } from '../utils/keycodes.js';\nimport { getFlattenedDOMTree } from '../utils/traversal.js';\n// todo cory: unit test\nexport function getNextKeyGridItem(cells, rows, config) {\n    const currentCell = cells.find(i => i.tabIndex === 0);\n    const currentRow = rows.find(r => getFlattenedDOMTree(r).find(c => c === currentCell));\n    const currentRowCells = Array.from(getFlattenedDOMTree(currentRow)).filter(c => !!cells.find(i => i === c));\n    const numOfRows = rows.length - 1;\n    const numOfColumns = currentRowCells.length - 1;\n    const { code, ctrlKey, dir } = config;\n    let x = currentRowCells.indexOf(currentCell);\n    let y = rows.indexOf(currentRow);\n    const inlineStart = dir === 'rtl' ? KeyNavigationCode.ArrowRight : KeyNavigationCode.ArrowLeft;\n    const inlineEnd = dir === 'rtl' ? KeyNavigationCode.ArrowLeft : KeyNavigationCode.ArrowRight;\n    if (code === KeyNavigationCode.ArrowUp && y !== 0) {\n        y = y - 1;\n    }\n    else if (code === KeyNavigationCode.ArrowDown && y < numOfRows) {\n        y = y + 1;\n    }\n    else if (code === inlineStart && x !== 0) {\n        x = x - 1;\n    }\n    else if (code === inlineEnd && x < numOfColumns) {\n        x = x + 1;\n    }\n    else if (code === KeyNavigationCode.End) {\n        x = numOfColumns;\n        if (ctrlKey) {\n            y = numOfRows;\n        }\n    }\n    else if (code === KeyNavigationCode.Home) {\n        x = 0;\n        if (ctrlKey) {\n            y = 0;\n        }\n    }\n    else if (code === KeyNavigationCode.PageUp) {\n        y = y - 4 > 0 ? y - 4 : 0;\n    }\n    else if (code === KeyNavigationCode.PageDown) {\n        y = y + 4 < numOfRows ? y + 4 : numOfRows;\n    }\n    return { x, y };\n}\nexport function getNextKeyListItem(item, items, config) {\n    // todo: cory test\n    const { code, layout, loop, dir } = config;\n    let i = items.indexOf(item);\n    const previous = i;\n    const inlineStart = dir === 'rtl' ? KeyNavigationCode.ArrowRight : KeyNavigationCode.ArrowLeft;\n    const inlineEnd = dir === 'rtl' ? KeyNavigationCode.ArrowLeft : KeyNavigationCode.ArrowRight;\n    const numOfItems = items.length - 1;\n    if (layout !== 'horizontal' && code === KeyNavigationCode.ArrowUp && i !== 0) {\n        i = i - 1;\n    }\n    else if (layout !== 'horizontal' && code === KeyNavigationCode.ArrowUp && i === 0 && loop) {\n        i = numOfItems;\n    }\n    else if (layout !== 'horizontal' && code === KeyNavigationCode.ArrowDown && i < numOfItems) {\n        i = i + 1;\n    }\n    else if (layout !== 'horizontal' && code === KeyNavigationCode.ArrowDown && i === numOfItems && loop) {\n        i = 0;\n    }\n    else if (layout !== 'vertical' && code === inlineStart && i !== 0) {\n        i = i - 1;\n    }\n    else if (layout !== 'vertical' && code === inlineEnd && i < numOfItems) {\n        i = i + 1;\n    }\n    else if (code === KeyNavigationCode.End) {\n        i = numOfItems;\n    }\n    else if (code === KeyNavigationCode.Home) {\n        i = 0;\n    }\n    else if (code === KeyNavigationCode.PageUp) {\n        i = i - 4 > 0 ? i - 4 : 0;\n    }\n    else if (code === KeyNavigationCode.PageDown) {\n        i = i + 4 < numOfItems ? i + 4 : numOfItems;\n    }\n    return { next: i, previous };\n}\n"],"names":["getNextKeyGridItem","cells","rows","config","currentCell","find","i","tabIndex","currentRow","r","getFlattenedDOMTree","c","currentRowCells","Array","from","filter","numOfRows","length","numOfColumns","code","ctrlKey","dir","x","indexOf","y","inlineStart","KeyNavigationCode","ArrowRight","ArrowLeft","inlineEnd","ArrowUp","ArrowDown","End","Home","PageUp","PageDown","getNextKeyListItem","item","items","layout","loop","previous","numOfItems","next"],"mappings":"qHAQO,SAASA,EAAmBC,EAAOC,EAAMC,GAC5C,MAAMC,EAAcH,EAAMI,MAAKC,GAAoB,IAAfA,EAAEC,WAChCC,EAAaN,EAAKG,MAAKI,GAAKC,EAAoBD,GAAGJ,MAAKM,GAAKA,IAAMP,MACnEQ,EAAkBC,MAAMC,KAAKJ,EAAoBF,IAAaO,QAAOJ,KAAOV,EAAMI,MAAKC,GAAKA,IAAMK,MAClGK,EAAYd,EAAKe,OAAS,EAC1BC,EAAeN,EAAgBK,OAAS,GACxCE,KAAEA,EAAIC,QAAEA,EAAOC,IAAEA,GAAQlB,EAC/B,IAAImB,EAAIV,EAAgBW,QAAQnB,GAC5BoB,EAAItB,EAAKqB,QAAQf,GACrB,MAAMiB,EAAsB,QAARJ,EAAgBK,EAAkBC,WAAaD,EAAkBE,UAC/EC,EAAoB,QAARR,EAAgBK,EAAkBE,UAAYF,EAAkBC,WA+BlF,OA9BIR,IAASO,EAAkBI,SAAiB,IAANN,EACtCA,GAAQ,EAEHL,IAASO,EAAkBK,WAAaP,EAAIR,EACjDQ,GAAQ,EAEHL,IAASM,GAAqB,IAANH,EAC7BA,GAAQ,EAEHH,IAASU,GAAaP,EAAIJ,EAC/BI,GAAQ,EAEHH,IAASO,EAAkBM,KAChCV,EAAIJ,EACAE,IACAI,EAAIR,IAGHG,IAASO,EAAkBO,MAChCX,EAAI,EACAF,IACAI,EAAI,IAGHL,IAASO,EAAkBQ,OAChCV,EAAIA,EAAI,EAAI,EAAIA,EAAI,EAAI,EAEnBL,IAASO,EAAkBS,WAChCX,EAAIA,EAAI,EAAIR,EAAYQ,EAAI,EAAIR,GAE7B,CAAEM,EAAAA,EAAGE,EAAAA,GAET,SAASY,EAAmBC,EAAMC,EAAOnC,GAE5C,MAAMgB,KAAEA,EAAIoB,OAAEA,EAAMC,KAAEA,EAAInB,IAAEA,GAAQlB,EACpC,IAAIG,EAAIgC,EAAMf,QAAQc,GACtB,MAAMI,EAAWnC,EACXmB,EAAsB,QAARJ,EAAgBK,EAAkBC,WAAaD,EAAkBE,UAC/EC,EAAoB,QAARR,EAAgBK,EAAkBE,UAAYF,EAAkBC,WAC5Ee,EAAaJ,EAAMrB,OAAS,EA+BlC,MA9Be,eAAXsB,GAA2BpB,IAASO,EAAkBI,SAAiB,IAANxB,EACjEA,GAAQ,EAEQ,eAAXiC,GAA2BpB,IAASO,EAAkBI,SAAiB,IAANxB,GAAWkC,EACjFlC,EAAIoC,EAEY,eAAXH,GAA2BpB,IAASO,EAAkBK,WAAazB,EAAIoC,EAC5EpC,GAAQ,EAEQ,eAAXiC,GAA2BpB,IAASO,EAAkBK,WAAazB,IAAMoC,GAAcF,EAC5FlC,EAAI,EAEY,aAAXiC,GAAyBpB,IAASM,GAAqB,IAANnB,EACtDA,GAAQ,EAEQ,aAAXiC,GAAyBpB,IAASU,GAAavB,EAAIoC,EACxDpC,GAAQ,EAEHa,IAASO,EAAkBM,IAChC1B,EAAIoC,EAECvB,IAASO,EAAkBO,KAChC3B,EAAI,EAECa,IAASO,EAAkBQ,OAChC5B,EAAIA,EAAI,EAAI,EAAIA,EAAI,EAAI,EAEnBa,IAASO,EAAkBS,WAChC7B,EAAIA,EAAI,EAAIoC,EAAapC,EAAI,EAAIoC,GAE9B,CAAEC,KAAMrC,EAAGmC,SAAAA"}