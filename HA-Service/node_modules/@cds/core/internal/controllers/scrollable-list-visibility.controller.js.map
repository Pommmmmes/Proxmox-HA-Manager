{"version":3,"file":"scrollable-list-visibility.controller.js","sources":["../../../../src/internal/controllers/scrollable-list-visibility.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * List items default to `content-visibility: auto` for lazy initial render.\n * On scroll set all row items to `content-visibility: visible` for eager render.\n * This allows fast first render and smooth eager rendering anytime after for items within a bounded scroll box.\n */\nexport function scrollableVisibility() {\n    return (target) => target.addInitializer((instance) => new ScrollableVisibilityController(instance));\n}\nexport class ScrollableVisibilityController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    get root() {\n        return this.host.shadowRoot ? this.host.shadowRoot : this.host;\n    }\n    async hostConnected() {\n        await this.host.updateComplete;\n        this.root.addEventListener('scroll', () => this.host.style.setProperty('--row-content-visibility', 'visibile'), {\n            once: true,\n            capture: true,\n        });\n    }\n}\n"],"names":["scrollableVisibility","target","addInitializer","instance","ScrollableVisibilityController","constructor","host","this","addController","root","shadowRoot","async","updateComplete","addEventListener","style","setProperty","once","capture"],"mappings":"AAUO,SAASA,IACZ,OAAQC,GAAWA,EAAOC,gBAAgBC,GAAa,IAAIC,EAA+BD,KAEvF,MAAMC,EACTC,YAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKD,KAAKE,cAAcD,MAExBE,WACA,OAAOF,KAAKD,KAAKI,WAAaH,KAAKD,KAAKI,WAAaH,KAAKD,KAE9DK,4BACUJ,KAAKD,KAAKM,eAChBL,KAAKE,KAAKI,iBAAiB,UAAU,IAAMN,KAAKD,KAAKQ,MAAMC,YAAY,2BAA4B,aAAa,CAC5GC,MAAM,EACNC,SAAS"}