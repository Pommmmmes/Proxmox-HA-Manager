{"version":3,"file":"key-navigation-list.controller.js","sources":["../../../../src/internal/controllers/key-navigation-list.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { focusElement, initializeKeyListItems, setActiveKeyListItem } from '../utils/focus.js';\nimport { validKeyNavigationCode } from '../utils/keycodes.js';\nimport { getFlattenedFocusableItems } from '../utils/traversal.js';\nimport { getNextKeyListItem } from './key-navigation.utils.js';\n/**\n * Provides key list naviation behavior\n * https://webaim.org/techniques/keyboard/\n */\nexport function keyNavigationList(config = {}) {\n    return (target) => {\n        target.addInitializer((instance) => {\n            if (!instance.keyNavigationListController) {\n                instance.keyNavigationListController = new KeyNavigationListController(instance, config);\n            }\n        });\n    };\n}\nexport class KeyNavigationListController {\n    constructor(host, config = {}) {\n        this.host = host;\n        this.host.addController(this);\n        this.config = {\n            keyListItems: 'keyListItems',\n            layout: 'horizontal',\n            manageFocus: true,\n            manageTabindex: true,\n            loop: false,\n            dir: this.host.getAttribute('rtl'),\n            ...config,\n        };\n    }\n    get listItems() {\n        return this.host[this.config.keyListItems];\n    }\n    async hostConnected() {\n        await this.host.updateComplete;\n        this.initializeTabIndex();\n        this.host.addEventListener('click', (e) => this.clickItem(e));\n        this.host.addEventListener('keydown', (e) => this.focusItem(e));\n        this.host.shadowRoot?.addEventListener('click', (e) => this.clickItem(e));\n        this.host.shadowRoot?.addEventListener('keydown', (e) => this.focusItem(e));\n    }\n    initializeTabIndex() {\n        if (this.config.manageFocus && this.config.manageTabindex) {\n            initializeKeyListItems(this.listItems);\n        }\n    }\n    clickItem(e) {\n        const activeItem = this.getActiveItem(e);\n        if (activeItem) {\n            this.setActiveItem(e, activeItem);\n        }\n    }\n    focusItem(e) {\n        if (validKeyNavigationCode(e)) {\n            const activeItem = this.getActiveItem(e);\n            if (activeItem) {\n                const { next, previous } = getNextKeyListItem(activeItem, Array.from(this.listItems), {\n                    ...this.config,\n                    code: e.code,\n                });\n                if (next !== previous) {\n                    // todo: test for only emiting when position has changed\n                    this.setActiveItem(e, this.listItems[next], this.listItems[previous]);\n                }\n            }\n        }\n    }\n    getActiveItem(e) {\n        return Array.from(this.listItems).find(c => c === e.target.closest(this.listItems[0].tagName.toLocaleLowerCase()) ?? c === e.target);\n    }\n    setActiveItem(e, activeItem, previousItem) {\n        if (this.config.manageFocus) {\n            if (this.config.manageTabindex) {\n                setActiveKeyListItem(this.listItems, activeItem);\n            }\n            const items = getFlattenedFocusableItems(activeItem);\n            const item = items[0] ?? activeItem;\n            focusElement(item);\n            e.preventDefault();\n        }\n        activeItem.dispatchEvent(new CustomEvent('cdsKeyChange', {\n            bubbles: true,\n            detail: {\n                activeItem,\n                previousItem,\n                code: e.code,\n                metaKey: e.ctrlKey || e.metaKey,\n                keyListItems: this.config.keyListItems,\n            },\n        }));\n    }\n}\n"],"names":["keyNavigationList","config","target","addInitializer","instance","keyNavigationListController","KeyNavigationListController","constructor","host","this","addController","keyListItems","layout","manageFocus","manageTabindex","loop","dir","getAttribute","listItems","async","updateComplete","initializeTabIndex","addEventListener","e","clickItem","focusItem","shadowRoot","initializeKeyListItems","activeItem","getActiveItem","setActiveItem","validKeyNavigationCode","next","previous","getNextKeyListItem","Array","from","code","find","c","closest","tagName","toLocaleLowerCase","previousItem","setActiveKeyListItem","item","getFlattenedFocusableItems","focusElement","preventDefault","dispatchEvent","CustomEvent","bubbles","detail","metaKey","ctrlKey"],"mappings":"uSAaO,SAASA,EAAkBC,EAAS,IACvC,OAAQC,IACJA,EAAOC,gBAAgBC,IACdA,EAASC,8BACVD,EAASC,4BAA8B,IAAIC,EAA4BF,EAAUH,QAK1F,MAAMK,EACTC,YAAYC,EAAMP,EAAS,IACvBQ,KAAKD,KAAOA,EACZC,KAAKD,KAAKE,cAAcD,MACxBA,KAAKR,OAAS,CACVU,aAAc,eACdC,OAAQ,aACRC,aAAa,EACbC,gBAAgB,EAChBC,MAAM,EACNC,IAAKP,KAAKD,KAAKS,aAAa,UACzBhB,GAGPiB,gBACA,OAAOT,KAAKD,KAAKC,KAAKR,OAAOU,cAEjCQ,4BACUV,KAAKD,KAAKY,eAChBX,KAAKY,qBACLZ,KAAKD,KAAKc,iBAAiB,SAAUC,GAAMd,KAAKe,UAAUD,KAC1Dd,KAAKD,KAAKc,iBAAiB,WAAYC,GAAMd,KAAKgB,UAAUF,KAC5Dd,KAAKD,KAAKkB,YAAYJ,iBAAiB,SAAUC,GAAMd,KAAKe,UAAUD,KACtEd,KAAKD,KAAKkB,YAAYJ,iBAAiB,WAAYC,GAAMd,KAAKgB,UAAUF,KAE5EF,qBACQZ,KAAKR,OAAOY,aAAeJ,KAAKR,OAAOa,gBACvCa,EAAuBlB,KAAKS,WAGpCM,UAAUD,GACN,MAAMK,EAAanB,KAAKoB,cAAcN,GAClCK,GACAnB,KAAKqB,cAAcP,EAAGK,GAG9BH,UAAUF,GACN,GAAIQ,EAAuBR,GAAI,CAC3B,MAAMK,EAAanB,KAAKoB,cAAcN,GACtC,GAAIK,EAAY,CACZ,MAAMI,KAAEA,EAAIC,SAAEA,GAAaC,EAAmBN,EAAYO,MAAMC,KAAK3B,KAAKS,WAAY,IAC/ET,KAAKR,OACRoC,KAAMd,EAAEc,OAERL,IAASC,GAETxB,KAAKqB,cAAcP,EAAGd,KAAKS,UAAUc,GAAOvB,KAAKS,UAAUe,MAK3EJ,cAAcN,GACV,OAAOY,MAAMC,KAAK3B,KAAKS,WAAWoB,MAAKC,GAAKA,IAAMhB,EAAErB,OAAOsC,QAAQ/B,KAAKS,UAAU,GAAGuB,QAAQC,sBAAwBH,IAAMhB,EAAErB,SAEjI4B,cAAcP,EAAGK,EAAYe,GACzB,GAAIlC,KAAKR,OAAOY,YAAa,CACrBJ,KAAKR,OAAOa,gBACZ8B,EAAqBnC,KAAKS,UAAWU,GAEzC,MACMiB,EADQC,EAA2BlB,GACtB,IAAMA,EACzBmB,EAAaF,GACbtB,EAAEyB,iBAENpB,EAAWqB,cAAc,IAAIC,YAAY,eAAgB,CACrDC,SAAS,EACTC,OAAQ,CACJxB,WAAAA,EACAe,aAAAA,EACAN,KAAMd,EAAEc,KACRgB,QAAS9B,EAAE+B,SAAW/B,EAAE8B,QACxB1C,aAAcF,KAAKR,OAAOU"}