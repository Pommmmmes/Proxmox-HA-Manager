{"version":3,"file":"first-focus.controller.js","sources":["../../../../src/internal/controllers/first-focus.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { focusable, focusElement, ignoreFocus } from '../utils/focus.js';\nimport { listenForAttributeChange } from '../utils/events.js';\nimport { getFlattenedDOMTree } from '../utils/traversal.js';\n/**\n * Provides a focus first behavior to any component via the cds-first-focus attribute\n */\nexport function firstFocus(config = { fallback: 'focusable' }) {\n    return (target) => target.addInitializer((instance) => new FirstFocusController(instance, config));\n}\nexport class FirstFocusController {\n    constructor(host, config = { fallback: 'focusable' }) {\n        this.host = host;\n        this.config = config;\n        this.host.addController(this);\n    }\n    async hostConnected() {\n        await this.host.updateComplete;\n        this.observer = listenForAttributeChange(this.host, 'hidden', () => this.cdsFocusFirst());\n        this.cdsFocusFirst();\n    }\n    hostDisconnected() {\n        this.observer?.disconnect();\n    }\n    cdsFocusFirst() {\n        if (!ignoreFocus(this.host)) {\n            const root = this.host.shadowRoot ? this.host.shadowRoot : this.host;\n            const rootHost = root.querySelector('.private-host') ?? this.host;\n            const elements = getFlattenedDOMTree(root).filter(i => !i.hasAttribute('cds-focus-boundary'));\n            const firstFocus = elements.find(i => i.hasAttribute('cds-first-focus'));\n            const focusableElement = this.config.fallback === 'focusable'\n                ? elements.find(i => focusable(i) && !i.classList.contains('private-host'))\n                : null;\n            const host = this.config.fallback === 'none' ? null : rootHost;\n            const focus = firstFocus ?? focusableElement ?? host;\n            if (focus) {\n                focusElement(focus);\n            }\n        }\n    }\n}\n"],"names":["firstFocus","config","fallback","target","addInitializer","instance","FirstFocusController","constructor","host","this","addController","async","updateComplete","observer","listenForAttributeChange","cdsFocusFirst","hostDisconnected","disconnect","ignoreFocus","root","shadowRoot","rootHost","querySelector","elements","getFlattenedDOMTree","filter","i","hasAttribute","find","focusableElement","focusable","classList","contains","focus","focusElement"],"mappings":"2MAWO,SAASA,EAAWC,EAAS,CAAEC,SAAU,cAC5C,OAAQC,GAAWA,EAAOC,gBAAgBC,GAAa,IAAIC,EAAqBD,EAAUJ,KAEvF,MAAMK,EACTC,YAAYC,EAAMP,EAAS,CAAEC,SAAU,cACnCO,KAAKD,KAAOA,EACZC,KAAKR,OAASA,EACdQ,KAAKD,KAAKE,cAAcD,MAE5BE,4BACUF,KAAKD,KAAKI,eAChBH,KAAKI,SAAWC,EAAyBL,KAAKD,KAAM,UAAU,IAAMC,KAAKM,kBACzEN,KAAKM,gBAETC,mBACIP,KAAKI,UAAUI,aAEnBF,gBACI,IAAKG,EAAYT,KAAKD,MAAO,CACzB,MAAMW,EAAOV,KAAKD,KAAKY,WAAaX,KAAKD,KAAKY,WAAaX,KAAKD,KAC1Da,EAAWF,EAAKG,cAAc,kBAAoBb,KAAKD,KACvDe,EAAWC,EAAoBL,GAAMM,QAAOC,IAAMA,EAAEC,aAAa,wBACjE3B,EAAauB,EAASK,MAAKF,GAAKA,EAAEC,aAAa,qBAC/CE,EAA4C,cAAzBpB,KAAKR,OAAOC,SAC/BqB,EAASK,MAAKF,GAAKI,EAAUJ,KAAOA,EAAEK,UAAUC,SAAS,kBACzD,KACAxB,EAAgC,SAAzBC,KAAKR,OAAOC,SAAsB,KAAOmB,EAChDY,EAAQjC,GAAc6B,GAAoBrB,EAC5CyB,GACAC,EAAaD"}