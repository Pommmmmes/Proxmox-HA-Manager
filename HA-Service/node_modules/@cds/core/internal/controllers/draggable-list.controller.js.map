{"version":3,"file":"draggable-list.controller.js","sources":["../../../../src/internal/controllers/draggable-list.controller.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { querySelectorRoots } from '../utils/dom.js';\nimport { onChildListMutation, onFirstInteraction } from '../utils/events.js';\nimport { createId } from '../utils/identity.js';\nimport { KeyNavigationListController } from './key-navigation-list.controller.js';\nlet dragSrcEl = null;\n/**\n * Provides support for HTML5 native drag and drop to a component\n */\nexport function draggableList(config) {\n    return (target) => target.addInitializer((instance) => new DraggableListController(instance, config));\n}\nexport class DraggableListController {\n    constructor(host, config) {\n        this.host = host;\n        this.id = `__${createId()}`;\n        this.host.addController(this);\n        this.config = {\n            layout: 'both',\n            item: '',\n            dropZone: '',\n            manageFocus: true,\n            manageTabindex: false,\n            ...config,\n        };\n    }\n    get items() {\n        return querySelectorRoots(this.host, `${this.config.item}[draggable=\"true\"]`);\n    }\n    get dropZones() {\n        return querySelectorRoots(this.host, `${this.config.dropZone}[draggable=\"false\"]`);\n    }\n    async hostConnected() {\n        await this.host.updateComplete;\n        onFirstInteraction(this.host).then(() => {\n            this.addDragEventListeners(this.items);\n            this.initializeKeyListController();\n            this.host.addEventListener('click', async (e) => this.clickItem(e));\n            this.host.addEventListener('cdsKeyChange', (e) => this.focusItem(e));\n            this.host.shadowRoot?.addEventListener('click', async (e) => this.clickItem(e));\n            this.host.shadowRoot?.addEventListener('cdsKeyChange', (e) => this.focusItem(e));\n            this.observer = onChildListMutation(this.host, mutation => {\n                if (mutation) {\n                    const items = Array.from(mutation.addedNodes).filter(i => i.draggable);\n                    if (items.length) {\n                        this.addDragEventListeners(items);\n                    }\n                }\n            });\n        });\n    }\n    hostDisconnected() {\n        this.observer?.disconnect();\n    }\n    initializeKeyListController() {\n        Object.defineProperty(this.host, this.id, { get: () => this.items.map(i => i.querySelector('[cds-draggable]')) });\n        new KeyNavigationListController(this.host, {\n            layout: this.config.layout,\n            keyListItems: this.id,\n            manageFocus: this.config.manageFocus,\n            manageTabindex: this.config.manageTabindex,\n        });\n    }\n    clickItem(e) {\n        const handle = Array.from(e.composedPath()).find((e) => e.getAttribute && e.getAttribute('cds-draggable') === 'handle');\n        const from = e.composedPath()[0].closest('[draggable]');\n        if (handle && from) {\n            if (handle.ariaPressed === 'true') {\n                from.setAttribute('cds-draggable', 'active');\n                dispatchDraggableChange(e.currentTarget, from, null, 'grabbed', 'touch');\n            }\n            else if (handle.ariaPressed === 'false') {\n                from.removeAttribute('cds-draggable');\n                dispatchDraggableChange(e.currentTarget, from, null, 'dropped', 'touch');\n            }\n        }\n    }\n    focusItem(e) {\n        if (e.detail.keyListItems === this.id &&\n            e.detail.previousItem?.closest('[draggable]').getAttribute('cds-draggable') === 'active') {\n            const from = e.detail.previousItem?.closest('[draggable]');\n            const target = e.detail.activeItem.closest('[draggable]');\n            if (e.detail.activeItem.getAttribute('cds-draggable') === 'handle' && from !== target) {\n                e.detail.previousItem.ariaPressed = 'false';\n                e.detail.activeItem.ariaPressed = 'true';\n                e.detail.previousItem.pressed = false;\n                e.detail.activeItem.pressed = true;\n                from.removeAttribute('cds-draggable');\n                target.setAttribute('cds-draggable', 'active');\n                dispatchDraggableChange(e.detail.activeItem, from, target, 'reordered', 'key');\n            }\n        }\n    }\n    addDragEventListeners(items) {\n        items.filter(i => !i.cdsDraggableItem).forEach(item => addHandlers(item));\n        this.dropZones\n            .filter(i => !i.cdsDraggableItem)\n            .forEach(elem => {\n            elem.addEventListener('dragover', handleDragOver, false);\n            elem.addEventListener('dragleave', handleDragLeave, false);\n            elem.addEventListener('drop', handleDrop, false);\n            elem.cdsDraggableItem = 'dropzone';\n        });\n    }\n}\nasync function dispatchDraggableChange(host, from, target, type, interaction) {\n    if (host?.updateComplete) {\n        await host.updateComplete;\n    }\n    host.dispatchEvent(new CustomEvent('cdsDraggableChange', { detail: { from, target, type, interaction }, bubbles: true }));\n}\nfunction handleDragStart(e) {\n    dragSrcEl = e.currentTarget;\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(e.currentTarget, 0, 0);\n    e.currentTarget.setAttribute('cds-draggable', 'active');\n    dispatchDraggableChange(e.currentTarget, e.currentTarget, null, 'grabbed', 'touch');\n}\nfunction handleDragOver(e) {\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n    e.dataTransfer.dropEffect = 'move';\n    if (dragSrcEl !== e.currentTarget) {\n        e.currentTarget.setAttribute('cds-draggable', 'target');\n    }\n    return false;\n}\nfunction handleDrop(e) {\n    const from = dragSrcEl;\n    const target = e.currentTarget;\n    from?.removeAttribute('cds-draggable');\n    target?.removeAttribute('cds-draggable');\n    dispatchDraggableChange(e.currentTarget, from, target, 'reordered', 'touch');\n    return false;\n}\nfunction handleDragLeave(e) {\n    if (e.currentTarget.getAttribute('cds-draggable') === 'target') {\n        e.currentTarget.removeAttribute('cds-draggable');\n    }\n}\nfunction addHandlers(elem) {\n    elem.cdsDraggableItem = 'item';\n    elem.addEventListener('dragstart', handleDragStart, false);\n    elem.addEventListener('dragover', handleDragOver, false);\n    elem.addEventListener('drop', handleDrop, false);\n    elem.addEventListener('dragleave', handleDragLeave, false);\n    elem.addEventListener('dragend', (e) => e.currentTarget.removeAttribute('cds-draggable'), false);\n}\n"],"names":["dragSrcEl","draggableList","config","target","addInitializer","instance","DraggableListController","constructor","host","this","id","createId","addController","layout","item","dropZone","manageFocus","manageTabindex","items","querySelectorRoots","dropZones","async","updateComplete","onFirstInteraction","then","addDragEventListeners","initializeKeyListController","addEventListener","e","clickItem","focusItem","shadowRoot","observer","onChildListMutation","mutation","Array","from","addedNodes","filter","i","draggable","length","hostDisconnected","disconnect","Object","defineProperty","get","map","querySelector","KeyNavigationListController","keyListItems","handle","composedPath","find","getAttribute","closest","ariaPressed","setAttribute","dispatchDraggableChange","currentTarget","removeAttribute","detail","previousItem","activeItem","pressed","cdsDraggableItem","forEach","addHandlers","elem","handleDragStart","handleDragOver","handleDrop","handleDragLeave","type","interaction","dispatchEvent","CustomEvent","bubbles","dataTransfer","effectAllowed","setDragImage","preventDefault","dropEffect"],"mappings":"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"}