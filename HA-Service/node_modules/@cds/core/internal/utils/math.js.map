{"version":3,"file":"math.js","sources":["../../../../src/internal/utils/math.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport isNil from 'ramda/es/isNil';\nimport sum from 'ramda/es/sum';\nimport curryN from 'ramda/es/curryN';\nexport function getMillisecondsFromSeconds(sec) {\n    return isNil(sec) ? 0 : Number(sec) * 1000;\n}\nexport const sumAndSubtract = curryN(3, (startValue, add, subtract) => {\n    return (startValue || 0) + sum(add || []) - sum(subtract || []);\n});\nexport const compareSumTo = curryN(4, (startValue, add, subtract, compareFn) => {\n    return !compareFn ? false : compareFn(sumAndSubtract(startValue, add, subtract));\n});\nexport function getOffesetDifference(minuend, subtrahend) {\n    return Math.sign(subtrahend - minuend) * Math.abs(minuend - subtrahend);\n}\n"],"names":["getMillisecondsFromSeconds","sec","isNil","Number","sumAndSubtract","curryN","startValue","add","subtract","sum","compareSumTo","compareFn","getOffesetDifference","minuend","subtrahend","Math","sign","abs"],"mappings":"yFAQO,SAASA,EAA2BC,GACvC,OAAOC,EAAMD,GAAO,EAAkB,IAAdE,OAAOF,GAEvB,MAACG,EAAiBC,EAAO,GAAG,CAACC,EAAYC,EAAKC,KAC9CF,GAAc,GAAKG,EAAIF,GAAO,IAAME,EAAID,GAAY,MAEnDE,EAAeL,EAAO,GAAG,CAACC,EAAYC,EAAKC,EAAUG,MACtDA,GAAoBA,EAAUP,EAAeE,EAAYC,EAAKC,MAEnE,SAASI,EAAqBC,EAASC,GAC1C,OAAOC,KAAKC,KAAKF,EAAaD,GAAWE,KAAKE,IAAIJ,EAAUC"}