{"version":3,"file":"focus.js","sources":["../../../../src/internal/utils/focus.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { stopEvent } from './events.js';\nexport function focusable(element) {\n    return element.matches([\n        'a[href]',\n        'area[href]',\n        'input:not([disabled])',\n        'button:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'iframe',\n        'object',\n        'embed',\n        '*[tabindex]',\n        '*[contenteditable=true]',\n        '[role=button]:not([disabled])',\n    ].join(','));\n}\n// todo cory: test\n/**\n * Lists simple focus primitives, any interactive element that does not require advanced keyboard interactions like arrow/navigation\n */\nexport function simpleFocusable(element) {\n    return element.matches([\n        'a[href]',\n        'button:not([disabled])',\n        'input[type=checkbox]',\n        'input[type=radio]',\n        'object',\n        'embed',\n        '*[tabindex]',\n        '[role=button]:not([disabled])',\n    ].join(','));\n}\nexport function getActiveElement(root = document) {\n    if (root.activeElement && root.activeElement.shadowRoot) {\n        return getActiveElement(root.activeElement.shadowRoot) ?? root.activeElement;\n    }\n    else {\n        return root.activeElement;\n    }\n}\nexport function focusElement(element) {\n    if (element && !focusable(element)) {\n        element.setAttribute('tabindex', '-1');\n        element.focus();\n        element.addEventListener('blur', () => element.removeAttribute('tabindex'), { once: true });\n    }\n    else {\n        element?.focus();\n    }\n}\nexport function onFocusOut(element, fn) {\n    element.addEventListener('focusout', (event) => {\n        if (!element.contains(event.relatedTarget) && document.hasFocus()) {\n            fn();\n        }\n    });\n}\nexport function onEscape(element, fn) {\n    element.addEventListener('keyup', (e) => {\n        if (e.code === 'Escape') {\n            stopEvent(e);\n            fn();\n        }\n    });\n}\nexport function ignoreFocus(hostEl) {\n    return (hostEl.cdsIgnoreFocus === true ||\n        hostEl.hasAttribute('cds-ignore-focus') ||\n        hostEl.hasAttribute('_demo-mode') // deprecated internal\n    );\n}\n// todo cory: test\nexport function setActiveKeyListItem(items, item) {\n    items.forEach(i => (i.tabIndex = -1));\n    item.tabIndex = 0;\n}\n// todo cory: test\nexport function initializeKeyListItems(items) {\n    items.forEach(i => (i.tabIndex = -1));\n    items[0].tabIndex = 0;\n}\n"],"names":["focusable","element","matches","simpleFocusable","getActiveElement","root","document","activeElement","shadowRoot","focusElement","setAttribute","focus","addEventListener","removeAttribute","once","onFocusOut","fn","event","contains","relatedTarget","hasFocus","onEscape","e","code","stopEvent","ignoreFocus","hostEl","cdsIgnoreFocus","hasAttribute","setActiveKeyListItem","items","item","forEach","i","tabIndex","initializeKeyListItems"],"mappings":"wCAMO,SAASA,EAAUC,GACtB,OAAOA,EAAQC,QAAQ,yMAmBpB,SAASC,EAAgBF,GAC5B,OAAOA,EAAQC,QAAQ,gIAWpB,SAASE,EAAiBC,EAAOC,UACpC,OAAID,EAAKE,eAAiBF,EAAKE,cAAcC,WAClCJ,EAAiBC,EAAKE,cAAcC,aAAeH,EAAKE,cAGxDF,EAAKE,cAGb,SAASE,EAAaR,GACrBA,IAAYD,EAAUC,IACtBA,EAAQS,aAAa,WAAY,MACjCT,EAAQU,QACRV,EAAQW,iBAAiB,QAAQ,IAAMX,EAAQY,gBAAgB,aAAa,CAAEC,MAAM,KAGpFb,GAASU,QAGV,SAASI,EAAWd,EAASe,GAChCf,EAAQW,iBAAiB,YAAaK,KAC7BhB,EAAQiB,SAASD,EAAME,gBAAkBb,SAASc,YACnDJ,OAIL,SAASK,EAASpB,EAASe,GAC9Bf,EAAQW,iBAAiB,SAAUU,IAChB,WAAXA,EAAEC,OACFC,EAAUF,GACVN,QAIL,SAASS,EAAYC,GACxB,OAAkC,IAA1BA,EAAOC,gBACXD,EAAOE,aAAa,qBACpBF,EAAOE,aAAa,cAIrB,SAASC,EAAqBC,EAAOC,GACxCD,EAAME,SAAQC,GAAMA,EAAEC,UAAY,IAClCH,EAAKG,SAAW,EAGb,SAASC,EAAuBL,GACnCA,EAAME,SAAQC,GAAMA,EAAEC,UAAY,IAClCJ,EAAM,GAAGI,SAAW"}