{"version":3,"file":"event-subject.js","sources":["../../../../src/internal/utils/event-subject.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Subscription returned from EventSubject.\n * Enables subscriber to un-subscribe from source.\n */\nclass InternalEventSubscription {\n    constructor(fn, subscriptions) {\n        this.fn = fn;\n        this.subscriptions = subscriptions;\n    }\n    /** Use during disconnectedCallback to stop receiving events */\n    unsubscribe() {\n        const index = this.subscriptions.indexOf(this);\n        if (index !== -1) {\n            this.subscriptions.splice(index, 1);\n        }\n    }\n}\n/**\n * Basic Subject implementing Observer style pattern.\n * Use to trigger and communicate outgoing async updates.\n *\n * Used as a lightweight alternative to rxjs style subject.\n * RxJS pulls in too much code for our performance standards\n * and would require additional peer dependencies for the\n * host application to take on.\n *\n * @internal\n */\nexport class EventSubject {\n    constructor() {\n        this.subscriptions = [];\n    }\n    /** Subscribe to receive event value updates */\n    subscribe(fn) {\n        const sub = new InternalEventSubscription(fn, this.subscriptions);\n        this.subscriptions.push(sub);\n        return sub;\n    }\n    /** Use to trigger and send an event to all active subscribers */\n    emit(value) {\n        this.subscriptions.forEach(sub => sub.fn(value));\n    }\n    /** Cast Subject to Observable subtype to prevent access to `emit` */\n    toEventObservable() {\n        return this;\n    }\n}\n"],"names":["InternalEventSubscription","constructor","fn","subscriptions","this","unsubscribe","index","indexOf","splice","EventSubject","subscribe","sub","push","emit","value","forEach","toEventObservable"],"mappings":"AASA,MAAMA,EACFC,YAAYC,EAAIC,GACZC,KAAKF,GAAKA,EACVE,KAAKD,cAAgBA,EAGzBE,cACI,MAAMC,EAAQF,KAAKD,cAAcI,QAAQH,OAC1B,IAAXE,GACAF,KAAKD,cAAcK,OAAOF,EAAO,IAetC,MAAMG,EACTR,cACIG,KAAKD,cAAgB,GAGzBO,UAAUR,GACN,MAAMS,EAAM,IAAIX,EAA0BE,EAAIE,KAAKD,eAEnD,OADAC,KAAKD,cAAcS,KAAKD,GACjBA,EAGXE,KAAKC,GACDV,KAAKD,cAAcY,SAAQJ,GAAOA,EAAIT,GAAGY,KAG7CE,oBACI,OAAOZ"}