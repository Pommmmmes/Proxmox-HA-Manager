{"version":3,"file":"string.js","sources":["../../../../src/internal/utils/string.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { getFromObjectPath, isNilOrEmpty, isNumericString } from './identity.js';\nexport function transformToString(delimiter, fns, ...args) {\n    return fns\n        .map(fn => {\n        return fn(...args);\n    })\n        .join(delimiter)\n        .trim();\n}\n// have to go this route because ramda curry throws typescript for loops\nexport function transformToSpacedString(fns, ...args) {\n    return transformToString(' ', fns, ...args);\n}\nexport function transformToUnspacedString(fns, ...args) {\n    return transformToString('', fns, ...args);\n}\nexport function camelCaseToKebabCase(value) {\n    return value.replace(/[A-Z]/g, l => `-${l.toLowerCase()}`);\n}\nexport function kebabCaseToCamelCase(str) {\n    return str\n        .split('-')\n        .map((item, index) => (index ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item))\n        .join('');\n}\nexport function kebabCaseToPascalCase(string) {\n    const camelCase = kebabCaseToCamelCase(string);\n    return capitalizeFirstLetter(camelCase);\n}\n/**\n * Take a object map of css properties and if value concatenate string of all computed values\n * Useful for dynamic style tags in lit templates\n */\nexport function setStyles(styles) {\n    return createPropStyleSelectors(Object.keys(styles), styles);\n}\nexport function setPropStyles(styles) {\n    return createPropStyleSelectors(Object.keys(styles).filter(prop => prop.startsWith('--')), styles);\n}\nfunction createPropStyleSelectors(props, styles) {\n    return props.reduce((allStyles, prop) => `${allStyles}${styles[prop] ? `${prop}:${styles[prop]};` : ''}`, '');\n}\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/** Used for Storybook docs to define knob group for css properties */\nexport const cssGroup = 'CSS Custom Properties';\n/** Used for Storybook docs to define knob group for JavaScript properties */\nexport const propertiesGroup = 'Default Properties';\nexport function getNumericValueFromCssSecondsStyleValue(styleValueInSeconds) {\n    return pluckValueFromStringUnit(styleValueInSeconds, 's');\n}\nexport function isPrefixedOrSuffixedBy(str, stringFix, prefixOrSuffix = 'prefix') {\n    if (isNilOrEmpty(stringFix) || isNilOrEmpty(str)) {\n        return false;\n    }\n    const myFixToTest = prefixOrSuffix === 'prefix' ? str.substr(0, stringFix.length) : str.substr(-1 * stringFix.length);\n    return myFixToTest === stringFix;\n}\nexport function isPrefixedBy(str, prefix) {\n    return isPrefixedOrSuffixedBy(str, prefix, 'prefix');\n}\nexport function isSuffixedBy(str, suffix) {\n    return isPrefixedOrSuffixedBy(str, suffix, 'suffix');\n}\nexport function removePrefixOrSuffix(str, stringFix, prefixOrSuffix = 'prefix') {\n    if (isNilOrEmpty(str)) {\n        return '';\n    }\n    if (isNilOrEmpty(stringFix) || !isPrefixedOrSuffixedBy(str, stringFix, prefixOrSuffix)) {\n        return str;\n    }\n    switch (prefixOrSuffix) {\n        case 'prefix':\n            return str.substr(stringFix.length);\n        case 'suffix':\n            return str.substr(0, str.length - stringFix.length);\n        default:\n            return str;\n    }\n}\nexport function removePrefix(str, prefix) {\n    return removePrefixOrSuffix(str, prefix, 'prefix');\n}\nexport function removeSuffix(str, suffix) {\n    return removePrefixOrSuffix(str, suffix, 'suffix');\n}\nexport function replaceWord(str, wordToReplace, replaceWith = '') {\n    const words = str.split(' ');\n    const returnWords = replaceWith === ''\n        ? words.filter(w => w !== wordToReplace)\n        : words.map(w => (w === wordToReplace ? replaceWith : w));\n    return returnWords.length > 0 ? returnWords.join(' ') : '';\n}\nexport function trimExtraWhitespace(str) {\n    return !str ? '' : (str + '').trim().replace(/  +/g, ' ');\n}\nexport function transformSpacedStringToArray(str) {\n    const trimmed = trimExtraWhitespace(str);\n    return trimmed === '' ? [] : trimmed.split(' ');\n}\nexport function convertStringPropertyToObjectConfig(property, defaultConfig, converter) {\n    if (!converter) {\n        return defaultConfig;\n    }\n    return Object.assign(defaultConfig, converter(property));\n}\nexport function pluckValueFromStringUnit(val, unit) {\n    const trimmedVal = val ? val.trim() : '';\n    if (trimmedVal === '' || !trimmedVal.endsWith(unit)) {\n        return 0;\n    }\n    const valueWithoutUnit = trimmedVal.slice(0, -1 * unit.length);\n    return isNumericString(valueWithoutUnit) ? +valueWithoutUnit : 0;\n}\nexport function pluckPixelValue(val) {\n    return !val ? 0 : pluckValueFromStringUnit(val.trim(), 'px');\n}\nexport function interpolateNaively(template, dataObj, fallback) {\n    const interpolatedString = template.replace(/\\$\\{.+?\\}/g, match => {\n        const path = match.substr(2, match.length - 3).trim();\n        const value = getFromObjectPath(path, dataObj, fallback);\n        return value;\n    });\n    return interpolatedString;\n}\n"],"names":["transformToString","delimiter","fns","args","map","fn","join","trim","transformToSpacedString","transformToUnspacedString","camelCaseToKebabCase","value","replace","l","toLowerCase","kebabCaseToCamelCase","str","split","item","index","charAt","toUpperCase","slice","kebabCaseToPascalCase","string","capitalizeFirstLetter","setStyles","styles","createPropStyleSelectors","Object","keys","setPropStyles","filter","prop","startsWith","props","reduce","allStyles","cssGroup","propertiesGroup","getNumericValueFromCssSecondsStyleValue","styleValueInSeconds","pluckValueFromStringUnit","isPrefixedOrSuffixedBy","stringFix","prefixOrSuffix","isNilOrEmpty","substr","length","isPrefixedBy","prefix","isSuffixedBy","suffix","removePrefixOrSuffix","removePrefix","removeSuffix","replaceWord","wordToReplace","replaceWith","words","returnWords","w","trimExtraWhitespace","transformSpacedStringToArray","trimmed","convertStringPropertyToObjectConfig","property","defaultConfig","converter","assign","val","unit","trimmedVal","endsWith","valueWithoutUnit","isNumericString","pluckPixelValue","interpolateNaively","template","dataObj","fallback","match","path","getFromObjectPath"],"mappings":"yFAMO,SAASA,EAAkBC,EAAWC,KAAQC,GACjD,OAAOD,EACFE,KAAIC,GACEA,KAAMF,KAEZG,KAAKL,GACLM,OAGF,SAASC,EAAwBN,KAAQC,GAC5C,OAAOH,EAAkB,IAAKE,KAAQC,GAEnC,SAASM,EAA0BP,KAAQC,GAC9C,OAAOH,EAAkB,GAAIE,KAAQC,GAElC,SAASO,EAAqBC,GACjC,OAAOA,EAAMC,QAAQ,UAAUC,GAAK,IAAIA,EAAEC,gBAEvC,SAASC,EAAqBC,GACjC,OAAOA,EACFC,MAAM,KACNb,KAAI,CAACc,EAAMC,IAAWA,EAAQD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,GAAGR,cAAgBI,IAC3FZ,KAAK,IAEP,SAASiB,EAAsBC,GAElC,OAAOC,EADWV,EAAqBS,IAOpC,SAASE,EAAUC,GACtB,OAAOC,EAAyBC,OAAOC,KAAKH,GAASA,GAElD,SAASI,EAAcJ,GAC1B,OAAOC,EAAyBC,OAAOC,KAAKH,GAAQK,QAAOC,GAAQA,EAAKC,WAAW,QAAQP,GAE/F,SAASC,EAAyBO,EAAOR,GACrC,OAAOQ,EAAMC,QAAO,CAACC,EAAWJ,IAAS,GAAGI,IAAYV,EAAOM,GAAQ,GAAGA,KAAQN,EAAOM,MAAW,MAAM,IAEvG,SAASR,EAAsBD,GAClC,OAAOA,EAAOJ,OAAO,GAAGC,cAAgBG,EAAOF,MAAM,GAG7C,MAACgB,EAAW,wBAEXC,EAAkB,qBACxB,SAASC,EAAwCC,GACpD,OAAOC,EAAyBD,EAAqB,KAElD,SAASE,EAAuB3B,EAAK4B,EAAWC,EAAiB,UACpE,OAAIC,EAAaF,KAAcE,EAAa9B,KAGL,WAAnB6B,EAA8B7B,EAAI+B,OAAO,EAAGH,EAAUI,QAAUhC,EAAI+B,QAAQ,EAAIH,EAAUI,WACvFJ,EAEpB,SAASK,EAAajC,EAAKkC,GAC9B,OAAOP,EAAuB3B,EAAKkC,EAAQ,UAExC,SAASC,EAAanC,EAAKoC,GAC9B,OAAOT,EAAuB3B,EAAKoC,EAAQ,UAExC,SAASC,EAAqBrC,EAAK4B,EAAWC,EAAiB,UAClE,GAAIC,EAAa9B,GACb,MAAO,GAEX,GAAI8B,EAAaF,KAAeD,EAAuB3B,EAAK4B,EAAWC,GACnE,OAAO7B,EAEX,OAAQ6B,GACJ,IAAK,SACD,OAAO7B,EAAI+B,OAAOH,EAAUI,QAChC,IAAK,SACD,OAAOhC,EAAI+B,OAAO,EAAG/B,EAAIgC,OAASJ,EAAUI,QAChD,QACI,OAAOhC,GAGZ,SAASsC,EAAatC,EAAKkC,GAC9B,OAAOG,EAAqBrC,EAAKkC,EAAQ,UAEtC,SAASK,EAAavC,EAAKoC,GAC9B,OAAOC,EAAqBrC,EAAKoC,EAAQ,UAEtC,SAASI,EAAYxC,EAAKyC,EAAeC,EAAc,IAC1D,MAAMC,EAAQ3C,EAAIC,MAAM,KAClB2C,EAA8B,KAAhBF,EACdC,EAAM3B,QAAO6B,GAAKA,IAAMJ,IACxBE,EAAMvD,KAAIyD,GAAMA,IAAMJ,EAAgBC,EAAcG,IAC1D,OAAOD,EAAYZ,OAAS,EAAIY,EAAYtD,KAAK,KAAO,GAErD,SAASwD,EAAoB9C,GAChC,OAAQA,GAAYA,EAAM,IAAIT,OAAOK,QAAQ,OAAQ,KAAvC,GAEX,SAASmD,EAA6B/C,GACzC,MAAMgD,EAAUF,EAAoB9C,GACpC,MAAmB,KAAZgD,EAAiB,GAAKA,EAAQ/C,MAAM,KAExC,SAASgD,EAAoCC,EAAUC,EAAeC,GACzE,OAAKA,EAGEvC,OAAOwC,OAAOF,EAAeC,EAAUF,IAFnCC,EAIR,SAASzB,EAAyB4B,EAAKC,GAC1C,MAAMC,EAAaF,EAAMA,EAAI/D,OAAS,GACtC,GAAmB,KAAfiE,IAAsBA,EAAWC,SAASF,GAC1C,OAAO,EAEX,MAAMG,EAAmBF,EAAWlD,MAAM,GAAI,EAAIiD,EAAKvB,QACvD,OAAO2B,EAAgBD,IAAqBA,EAAmB,EAE5D,SAASE,EAAgBN,GAC5B,OAAQA,EAAU5B,EAAyB4B,EAAI/D,OAAQ,MAAzC,EAEX,SAASsE,EAAmBC,EAAUC,EAASC,GAMlD,OAL2BF,EAASlE,QAAQ,cAAcqE,IACtD,MAAMC,EAAOD,EAAMlC,OAAO,EAAGkC,EAAMjC,OAAS,GAAGzC,OAE/C,OADc4E,EAAkBD,EAAMH,EAASC"}