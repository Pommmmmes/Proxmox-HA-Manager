{"version":3,"file":"traversal.js","sources":["../../../../src/internal/utils/traversal.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { focusable } from './focus.js';\nexport function getFlattenedFocusableItems(element, depth = 10) {\n    return getFlattenedDOMTree(element, depth).filter((e) => focusable(e));\n}\nexport function getFlattenedDOMTree(node, depth = 10) {\n    return Array.from(getChildren(node))\n        .reduce((prev, next) => {\n        return [...prev, [next, [...Array.from(getChildren(next)).map((i) => [i, getFlattenedDOMTree(i, depth)])]]];\n    }, [])\n        .flat(depth);\n}\nexport function getChildren(node) {\n    if (node.documentElement) {\n        return node.documentElement.children;\n    }\n    else if (node.shadowRoot) {\n        return node.shadowRoot.children;\n    }\n    else if (node.assignedElements) {\n        const slotted = node.assignedElements(); // slotted elements\n        return slotted.length ? slotted : node.children; // else slot fallback\n    }\n    else {\n        return node.children;\n    }\n}\n"],"names":["getFlattenedFocusableItems","element","depth","getFlattenedDOMTree","filter","e","focusable","node","Array","from","getChildren","reduce","prev","next","map","i","flat","documentElement","children","shadowRoot","assignedElements","slotted","length"],"mappings":"uCAMO,SAASA,EAA2BC,EAASC,EAAQ,IACxD,OAAOC,EAAoBF,EAASC,GAAOE,QAAQC,GAAMC,EAAUD,KAEhE,SAASF,EAAoBI,EAAML,EAAQ,IAC9C,OAAOM,MAAMC,KAAKC,EAAYH,IACzBI,QAAO,CAACC,EAAMC,IACR,IAAID,EAAM,CAACC,EAAM,IAAIL,MAAMC,KAAKC,EAAYG,IAAOC,KAAKC,GAAM,CAACA,EAAGZ,EAAoBY,EAAGb,UACjG,IACEc,KAAKd,GAEP,SAASQ,EAAYH,GACxB,GAAIA,EAAKU,gBACL,OAAOV,EAAKU,gBAAgBC,SAE3B,GAAIX,EAAKY,WACV,OAAOZ,EAAKY,WAAWD,SAEtB,GAAIX,EAAKa,iBAAkB,CAC5B,MAAMC,EAAUd,EAAKa,mBACrB,OAAOC,EAAQC,OAASD,EAAUd,EAAKW,SAGvC,OAAOX,EAAKW"}