{"version":3,"file":"button.base.js","sources":["../../../../src/internal/base/button.base.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement } from 'lit';\nimport { property } from '../decorators/property.js';\nimport { active } from '../controllers/active.controller.js';\nimport { ariaPopupTrigger } from '../controllers/aria-popup-trigger.controller.js';\nimport { ariaDisabled } from '../controllers/aria-disabled.controller.js';\nimport { ariaPressed } from '../controllers/aria-pressed.controller.js';\nimport { ariaButton } from '../controllers/aria-button.controller.js';\nimport { buttonAnchor } from '../controllers/button-anchor.controller.js';\nimport { buttonSubmit } from '../controllers/button-submit.controller.js';\nimport { ariaExpanded } from '../controllers/aria-expanded.controller.js';\n/**\n * Base class that provides all nessesary behavior for enabling a custom element to emulate a native button.\n */\nlet CdsBaseButton = class CdsBaseButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._disabled = false;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const oldValue = this._disabled;\n        this._disabled = value;\n        this.requestUpdate('disabled', oldValue);\n    }\n};\n__decorate([\n    property({ type: Boolean })\n], CdsBaseButton.prototype, \"pressed\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsBaseButton.prototype, \"expanded\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsBaseButton.prototype, \"readonly\", void 0);\n__decorate([\n    property({ type: String })\n], CdsBaseButton.prototype, \"type\", void 0);\n__decorate([\n    property({ type: String })\n], CdsBaseButton.prototype, \"name\", void 0);\n__decorate([\n    property({ type: String })\n], CdsBaseButton.prototype, \"value\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsBaseButton.prototype, \"disabled\", null);\n__decorate([\n    property({ type: String })\n], CdsBaseButton.prototype, \"popup\", void 0);\nCdsBaseButton = __decorate([\n    active(),\n    ariaButton(),\n    ariaPressed(),\n    ariaExpanded(),\n    ariaDisabled(),\n    ariaPopupTrigger(),\n    buttonSubmit(),\n    buttonAnchor()\n], CdsBaseButton);\nexport { CdsBaseButton };\n"],"names":["CdsBaseButton","LitElement","constructor","super","this","_disabled","disabled","value","oldValue","requestUpdate","__decorate","property","type","Boolean","prototype","String","active","ariaButton","ariaPressed","ariaExpanded","ariaDisabled","ariaPopupTrigger","buttonSubmit","buttonAnchor"],"mappings":"+rBAmBG,IAACA,EAAgB,cAA4BC,EAC5CC,cACIC,oBACAC,KAAKC,WAAY,EAEjBC,eACA,OAAOF,KAAKC,UAEZC,aAASC,GACT,MAAMC,EAAWJ,KAAKC,UACtBD,KAAKC,UAAYE,EACjBH,KAAKK,cAAc,WAAYD,KAGvCE,EAAW,CACPC,EAAS,CAAEC,KAAMC,WAClBb,EAAcc,UAAW,eAAW,GACvCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,WAClBb,EAAcc,UAAW,gBAAY,GACxCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,WAClBb,EAAcc,UAAW,gBAAY,GACxCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,UAClBf,EAAcc,UAAW,YAAQ,GACpCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,UAClBf,EAAcc,UAAW,YAAQ,GACpCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,UAClBf,EAAcc,UAAW,aAAS,GACrCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,WAClBb,EAAcc,UAAW,WAAY,MACxCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,UAClBf,EAAcc,UAAW,aAAS,GACrCd,EAAgBU,EAAW,CACvBM,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KACDvB"}