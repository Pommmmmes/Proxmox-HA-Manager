{"version":3,"file":"icon.service.js","sources":["../../../src/icon/icon.service.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { GlobalStateService } from '@cds/core/internal';\nimport { unknownIcon } from './shapes/unknown.js';\n/**\n * ClarityIcons is a static class that gives users the ability to interact with\n * the icon registry. This includes capabilities to add, retrieve, or alias icons\n * in the registry.\n *\n * @privateRemarks\n *\n * The icon registry is private to the module. There is no way to access it directly\n * outside of the module.\n *\n */\n// @dynamic\nexport class ClarityIcons {\n    /**\n     * Returns a readonly reference of the icon registry.\n     */\n    static get registry() {\n        return { unknown: unknownIcon[1], ...GlobalStateService.state.iconRegistry };\n    }\n    static addIcons(...shapes) {\n        GlobalStateService.state.iconRegistry = {\n            ...GlobalStateService.state.iconRegistry,\n            ...Object.fromEntries(shapes.filter(([name]) => !ClarityIcons.registry[name])),\n        };\n    }\n    /**\n     * @description\n     * Use `addIcons` instead of `addAliases`\n     *\n     * This method is a backwords compatibility function to the old API\n     *\n     * The team will revisit this method for possible deprecation.\n     */\n    static addAliases(...aliases) {\n        const updated = aliases\n            .filter(([name]) => ClarityIcons.registry[name])\n            .flatMap(([name, aliases]) => aliases.map(alias => [alias, ClarityIcons.registry[name]]));\n        GlobalStateService.state.iconRegistry = {\n            ...GlobalStateService.state.iconRegistry,\n            ...Object.fromEntries(updated),\n        };\n    }\n    static getIconNameFromShape(iconShape) {\n        return iconShape[0];\n    }\n}\n"],"names":["ClarityIcons","registry","unknown","unknownIcon","GlobalStateService","state","iconRegistry","static","shapes","Object","fromEntries","filter","name","aliases","updated","flatMap","map","alias","iconShape"],"mappings":"0GAmBO,MAAMA,EAIEC,sBACP,MAAO,CAAEC,QAASC,EAAY,MAAOC,EAAmBC,MAAMC,cAElEC,mBAAmBC,GACfJ,EAAmBC,MAAMC,aAAe,IACjCF,EAAmBC,MAAMC,gBACzBG,OAAOC,YAAYF,EAAOG,QAAO,EAAEC,MAAWZ,EAAaC,SAASW,OAW/EL,qBAAqBM,GACjB,MAAMC,EAAUD,EACXF,QAAO,EAAEC,KAAUZ,EAAaC,SAASW,KACzCG,SAAQ,EAAEH,EAAMC,KAAaA,EAAQG,KAAIC,GAAS,CAACA,EAAOjB,EAAaC,SAASW,QACrFR,EAAmBC,MAAMC,aAAe,IACjCF,EAAmBC,MAAMC,gBACzBG,OAAOC,YAAYI,IAG9BP,4BAA4BW,GACxB,OAAOA,EAAU"}