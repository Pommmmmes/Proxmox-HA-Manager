{"version":3,"file":"icon.classnames.js","sources":["../../../../src/icon/utils/icon.classnames.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isNil, isNilOrEmpty, isNumericString, isTshirtSize, pxToRem, replaceWord, updateElementStyles, unsetElementStyles, } from '@cds/core/internal';\nexport var SizeUpdateStrategies;\n(function (SizeUpdateStrategies) {\n    SizeUpdateStrategies[\"BadSizeValue\"] = \"bad-value\";\n    SizeUpdateStrategies[\"ValidSizeString\"] = \"value-is-string\";\n    SizeUpdateStrategies[\"ValidNumericString\"] = \"value-is-numeric\";\n    SizeUpdateStrategies[\"NilSizeValue\"] = \"value-is-nil\";\n})(SizeUpdateStrategies || (SizeUpdateStrategies = {}));\nexport function getUpdateSizeStrategy(size) {\n    switch (true) {\n        case isNilOrEmpty(size):\n            return SizeUpdateStrategies.NilSizeValue;\n        case isTshirtSize(size):\n            return SizeUpdateStrategies.ValidSizeString;\n        case isNumericString(size):\n            return SizeUpdateStrategies.ValidNumericString;\n        default:\n            return SizeUpdateStrategies.BadSizeValue;\n    }\n}\nexport function getSizeValue(size) {\n    return isNilOrEmpty(size) ? '' : replaceWord(size, 'fit');\n}\nexport function getIconSizeStylesToUpdate(size, sizeValueInRem) {\n    const isFitSized = isNil(size) ? false : size.indexOf('fit') > -1;\n    if (isFitSized) {\n        return [\n            ['width', 'auto'],\n            ['height', 'auto'],\n            ['min-width', sizeValueInRem],\n            ['min-height', sizeValueInRem],\n        ];\n    }\n    else {\n        return [\n            ['width', sizeValueInRem],\n            ['height', sizeValueInRem],\n            ['min-width', sizeValueInRem],\n            ['min-height', sizeValueInRem],\n        ];\n    }\n}\nexport function updateIconSizeStyle(el, size) {\n    const updateStrategy = getUpdateSizeStrategy(getSizeValue(size));\n    let val = '';\n    switch (updateStrategy) {\n        case SizeUpdateStrategies.ValidNumericString:\n            val = pxToRem(parseInt(size)); // set val in block to run expensive call only when needed\n            updateElementStyles(el, ...getIconSizeStylesToUpdate(size, val));\n            return;\n        case SizeUpdateStrategies.ValidSizeString:\n            unsetElementStyles(el, 'width', 'height', 'min-width', 'min-height');\n            return;\n        case SizeUpdateStrategies.NilSizeValue: // nil values empty out all sizing\n            unsetElementStyles(el, 'width', 'height', 'min-width', 'min-height');\n            return;\n        case SizeUpdateStrategies.BadSizeValue:\n            // bad-value is ignored\n            return;\n        default:\n            return;\n    }\n}\n"],"names":["SizeUpdateStrategies","getUpdateSizeStrategy","size","isNilOrEmpty","NilSizeValue","isTshirtSize","ValidSizeString","isNumericString","ValidNumericString","BadSizeValue","getSizeValue","replaceWord","getIconSizeStylesToUpdate","sizeValueInRem","isNil","indexOf","updateIconSizeStyle","el","val","pxToRem","parseInt","updateElementStyles","unsetElementStyles"],"mappings":"mLAMU,IAACA,EAOJ,SAASC,EAAsBC,GAClC,QAAQ,GACJ,KAAKC,EAAaD,GACd,OAAOF,EAAqBI,aAChC,KAAKC,EAAaH,GACd,OAAOF,EAAqBM,gBAChC,KAAKC,EAAgBL,GACjB,OAAOF,EAAqBQ,mBAChC,QACI,OAAOR,EAAqBS,cAGjC,SAASC,EAAaR,GACzB,OAAOC,EAAaD,GAAQ,GAAKS,EAAYT,EAAM,OAEhD,SAASU,EAA0BV,EAAMW,GAE5C,OADmBC,EAAMZ,IAAgBA,EAAKa,QAAQ,QAAU,EAErD,CACH,CAAC,QAAS,QACV,CAAC,SAAU,QACX,CAAC,YAAaF,GACd,CAAC,aAAcA,IAIZ,CACH,CAAC,QAASA,GACV,CAAC,SAAUA,GACX,CAAC,YAAaA,GACd,CAAC,aAAcA,IAIpB,SAASG,EAAoBC,EAAIf,GAEpC,IAAIgB,EAAM,GACV,OAFuBjB,EAAsBS,EAAaR,KAGtD,KAAKF,EAAqBQ,mBAGtB,OAFAU,EAAMC,EAAQC,SAASlB,SACvBmB,EAAoBJ,KAAOL,EAA0BV,EAAMgB,IAE/D,KAAKlB,EAAqBM,gBAG1B,KAAKN,EAAqBI,aAEtB,YADAkB,EAAmBL,EAAI,QAAS,SAAU,YAAa,cAE3D,KAAKjB,EAAqBS,aAG1B,QACI,SA1DZ,SAAWT,GACPA,EAAmC,aAAI,YACvCA,EAAsC,gBAAI,kBAC1CA,EAAyC,mBAAI,mBAC7CA,EAAmC,aAAI,eAJ3C,CAKGA,IAAyBA,EAAuB"}