{"version":3,"file":"icon.element.js","sources":["../../../src/icon/icon.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { baseStyles, hasStringPropertyChanged, hasStringPropertyChangedAndNotNil, property, state, isString, pxToRem, GlobalStateService, } from '@cds/core/internal';\nimport { html, LitElement, svg } from 'lit';\nimport { query } from 'lit/decorators/query.js';\nimport styles from './icon.element.scss';\nimport { ClarityIcons } from './icon.service.js';\nimport { updateIconSizeStyle } from './utils/icon.classnames.js';\nimport { getIconBadgeSVG, getIconSVG } from './utils/icon.svg-helpers.js';\n/**\n * Icon component that renders svg shapes that can be customized.\n * To load an icon, import the icon with the icon service.\n *\n * ```typescript\n * import '@cds/core/icon/register.js';\n * import { ClarityIcons, userIcon } from '@cds/core/icon';\n *\n * ClarityIcons.addIcons(userIcon);\n * ```\n *\n * ```html\n * <cds-icon shape=\"user\"></cds-icon>\n * ```\n *\n * @element cds-icon\n * @cssprop --color\n * @cssprop --badge-color\n */\nexport class CdsIcon extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._shape = 'unknown';\n        /**\n         * Displays most icons in their \"filled\" version if set to `true`.\n         */\n        this.solid = false;\n        /**\n         * Inverts color of icon fills and outlines if `true`.\n         * Useful for displaying icons on a dark background.\n         */\n        this.inverse = false;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    get shape() {\n        return this._shape;\n    }\n    /**\n     * Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\n     * the specified icon cannot be found in the icon registry.\n     */\n    set shape(val) {\n        if (hasStringPropertyChangedAndNotNil(val, this._shape)) {\n            const oldVal = this._shape;\n            this._shape = val;\n            this.requestUpdate('shape', oldVal);\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Apply numerical width-height or a t-shirt-sized CSS classname\n     * @type {string | xs | sm | md | lg | xl | xxl}\n     */\n    set size(val) {\n        if (hasStringPropertyChanged(val, this._size)) {\n            const oldVal = this._size;\n            this._size = val;\n            updateIconSizeStyle(this, val);\n            this.requestUpdate('size', oldVal);\n        }\n    }\n    updated(props) {\n        if (props.has('innerOffset') && this.innerOffset > 0) {\n            const val = pxToRem(-1 * this.innerOffset);\n            const dimension = `calc(100% + ${pxToRem(this.innerOffset * 2)})`;\n            this.svg.style.width = dimension;\n            this.svg.style.height = dimension;\n            this.svg.style.margin = `${val} 0 0 ${val}`;\n        }\n    }\n    firstUpdated(props) {\n        super.firstUpdated(props);\n        if (this.isConnected) {\n            let prior = 'unknown';\n            this.subscription = GlobalStateService.stateUpdates.subscribe(update => {\n                if (update.key === 'iconRegistry' && ClarityIcons.registry[this.shape] && prior !== this.shape) {\n                    prior = this.shape;\n                    this.requestUpdate('shape');\n                }\n            });\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.subscription?.unsubscribe();\n    }\n    render() {\n        return isString(ClarityIcons.registry[this.shape])\n            ? html `<span .innerHTML=\"${ClarityIcons.registry[this.shape]}\"></span>`\n            : svg `<svg .innerHTML=\"${getIconSVG(this) + getIconBadgeSVG(this)}\" viewBox=\"0 0 36 36\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"></svg>`;\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"shape\", null);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"size\", null);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"direction\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"flip\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsIcon.prototype, \"solid\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"status\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsIcon.prototype, \"inverse\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"badge\", void 0);\n__decorate([\n    state({ type: Number })\n], CdsIcon.prototype, \"innerOffset\", void 0);\n__decorate([\n    query('svg')\n], CdsIcon.prototype, \"svg\", void 0);\n"],"names":["CdsIcon","LitElement","constructor","super","this","_shape","solid","inverse","styles","baseStyles","shape","val","hasStringPropertyChangedAndNotNil","oldVal","requestUpdate","size","_size","hasStringPropertyChanged","updateIconSizeStyle","updated","props","has","innerOffset","pxToRem","dimension","svg","style","width","height","margin","firstUpdated","isConnected","prior","subscription","GlobalStateService","stateUpdates","subscribe","update","key","ClarityIcons","registry","disconnectedCallback","unsubscribe","render","isString","html","getIconSVG","getIconBadgeSVG","__decorate","property","type","String","prototype","Boolean","state","Number","query"],"mappings":"8iBAgCO,MAAMA,UAAgBC,EACzBC,cACIC,oBACAC,KAAKC,OAAS,UAIdD,KAAKE,OAAQ,EAKbF,KAAKG,SAAU,EAERC,oBACP,MAAO,CAACC,EAAYD,GAEpBE,YACA,OAAON,KAAKC,OAMZK,UAAMC,GACN,GAAIC,EAAkCD,EAAKP,KAAKC,QAAS,CACrD,MAAMQ,EAAST,KAAKC,OACpBD,KAAKC,OAASM,EACdP,KAAKU,cAAc,QAASD,IAGhCE,WACA,OAAOX,KAAKY,MAMZD,SAAKJ,GACL,GAAIM,EAAyBN,EAAKP,KAAKY,OAAQ,CAC3C,MAAMH,EAAST,KAAKY,MACpBZ,KAAKY,MAAQL,EACbO,EAAoBd,KAAMO,GAC1BP,KAAKU,cAAc,OAAQD,IAGnCM,QAAQC,GACJ,GAAIA,EAAMC,IAAI,gBAAkBjB,KAAKkB,YAAc,EAAG,CAClD,MAAMX,EAAMY,GAAS,EAAInB,KAAKkB,aACxBE,EAAY,eAAeD,EAA2B,EAAnBnB,KAAKkB,gBAC9ClB,KAAKqB,IAAIC,MAAMC,MAAQH,EACvBpB,KAAKqB,IAAIC,MAAME,OAASJ,EACxBpB,KAAKqB,IAAIC,MAAMG,OAAS,GAAGlB,SAAWA,KAG9CmB,aAAaV,GAET,GADAjB,MAAM2B,aAAaV,GACfhB,KAAK2B,YAAa,CAClB,IAAIC,EAAQ,UACZ5B,KAAK6B,aAAeC,EAAmBC,aAAaC,WAAUC,IACvC,iBAAfA,EAAOC,KAA0BC,EAAaC,SAASpC,KAAKM,QAAUsB,IAAU5B,KAAKM,QACrFsB,EAAQ5B,KAAKM,MACbN,KAAKU,cAAc,cAKnC2B,uBACItC,MAAMsC,uBACNrC,KAAK6B,cAAcS,cAEvBC,SACI,OAAOC,EAASL,EAAaC,SAASpC,KAAKM,QACrCmC,CAAK,qBAAqBN,EAAaC,SAASpC,KAAKM,kBACrDe,CAAI,oBAAoBqB,EAAW1C,MAAQ2C,EAAgB3C,2FAGzE4C,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,QAAS,MAC/BJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,OAAQ,MAC9BJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,iBAAa,GACnCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,YAAQ,GAC9BJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,WAClBrD,EAAQoD,UAAW,aAAS,GAC/BJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,cAAU,GAChCJ,EAAW,CACPC,EAAS,CAAEC,KAAMG,WAClBrD,EAAQoD,UAAW,eAAW,GACjCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClBnD,EAAQoD,UAAW,aAAS,GAC/BJ,EAAW,CACPM,EAAM,CAAEJ,KAAMK,UACfvD,EAAQoD,UAAW,mBAAe,GACrCJ,EAAW,CACPQ,EAAM,QACPxD,EAAQoD,UAAW,WAAO"}