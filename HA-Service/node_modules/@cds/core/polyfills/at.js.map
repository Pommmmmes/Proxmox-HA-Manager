{"version":3,"file":"at.js","sources":["../../../src/polyfills/at.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nlet registered = false;\n/**\n * Polyfill for Safari\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at\n */\nexport function at(n) {\n    n = Math.trunc(n) || 0;\n    if (n < 0) {\n        n += this.length;\n    }\n    if (n < 0 || n >= this.length) {\n        return undefined;\n    }\n    return this[n];\n}\nif (!registered) {\n    registered = true;\n    const TypedArray = Reflect.getPrototypeOf(Int8Array);\n    for (const C of [Array, String, TypedArray]) {\n        Object.defineProperty(C.prototype, 'at', {\n            value: at,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n}\n"],"names":["registered","at","n","Math","trunc","this","length","TypedArray","Reflect","getPrototypeOf","Int8Array","C","Array","String","Object","defineProperty","prototype","value","writable","enumerable","configurable"],"mappings":"AAKA,IAAIA,GAAa,EAKV,SAASC,EAAGC,GAKf,IAJAA,EAAIC,KAAKC,MAAMF,IAAM,GACb,IACJA,GAAKG,KAAKC,UAEVJ,EAAI,GAAKA,GAAKG,KAAKC,QAGvB,OAAOD,KAAKH,GAEhB,IAAKF,EAAY,CACbA,GAAa,EACb,MAAMO,EAAaC,QAAQC,eAAeC,WAC1C,IAAK,MAAMC,IAAK,CAACC,MAAOC,OAAQN,GAC5BO,OAAOC,eAAeJ,EAAEK,UAAW,KAAM,CACrCC,MAAOhB,EACPiB,UAAU,EACVC,YAAY,EACZC,cAAc"}