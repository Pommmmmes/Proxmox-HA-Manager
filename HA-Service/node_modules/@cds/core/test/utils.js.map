{"version":3,"file":"utils.js","sources":["../../../src/test/utils.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { render } from 'lit';\nexport function createTestElement(template) {\n    const element = document.createElement('div');\n    document.body.appendChild(element);\n    if (template) {\n        render(template, element);\n    }\n    return Promise.all(Array.from(document.querySelectorAll(':not(:defined)')).map(el => customElements.whenDefined(el.tagName))).then(() => element);\n}\nexport function removeTestElement(element) {\n    element.remove();\n}\nexport function getComponentSlotContent(component) {\n    return Array.from(component.shadowRoot?.querySelectorAll('slot')).reduce((acc, slot) => {\n        const name = slot.name.length > 0 ? slot.name : 'default';\n        acc[name] = slot.assignedNodes().reduce((p, n) => {\n            let returnDom = n.outerHTML;\n            returnDom = n.outerHTML ? n.outerHTML : n.textContent.trim();\n            return p + (returnDom ? returnDom : '');\n        }, '');\n        return acc;\n    }, {});\n}\nfunction retry(fn, maxTries = 10, promise, promiseObject = {\n    resolve: null,\n    reject: null,\n}) {\n    maxTries--;\n    promise =\n        promise ||\n            new Promise((resolve, reject) => {\n                promiseObject.resolve = resolve;\n                promiseObject.reject = reject;\n            });\n    fn()\n        .then((result) => {\n        promiseObject.resolve(result);\n    })\n        .catch(() => {\n        if (maxTries > 0) {\n            retry(fn, maxTries, promise, promiseObject);\n        }\n        else {\n            promiseObject.reject('Max attempts reached');\n        }\n    });\n    return promise;\n}\nexport function componentIsStable(component) {\n    return retry(() => \n    // eslint-disable-next-line no-async-promise-executor\n    new Promise(async (resolve, reject) => {\n        const stable = await component.updateComplete;\n        if (stable) {\n            resolve('success');\n        }\n        else {\n            reject('error');\n        }\n    }));\n}\n// Full set of mouse events, generated on click\nexport function emulatedClick(component) {\n    const event1 = new MouseEvent('mousedown');\n    const event2 = new MouseEvent('mouseup');\n    const event3 = new MouseEvent('click');\n    component.dispatchEvent(event1);\n    component.dispatchEvent(event2);\n    component.dispatchEvent(event3);\n}\n/** helpful for capturing a single event in a async test rather than Jasmine `done()` */\nexport function onceEvent(element, event) {\n    return new Promise(resolve => {\n        element.addEventListener(event, e => resolve(e));\n    });\n}\n"],"names":["createTestElement","template","element","document","createElement","body","appendChild","render","Promise","all","Array","from","querySelectorAll","map","el","customElements","whenDefined","tagName","then","removeTestElement","remove","getComponentSlotContent","component","shadowRoot","reduce","acc","slot","name","length","assignedNodes","p","n","returnDom","outerHTML","textContent","trim","retry","fn","maxTries","promise","promiseObject","resolve","reject","result","catch","componentIsStable","async","updateComplete","emulatedClick","event1","MouseEvent","event2","event3","dispatchEvent","onceEvent","event","addEventListener","e"],"mappings":"6BAMO,SAASA,EAAkBC,GAC9B,MAAMC,EAAUC,SAASC,cAAc,OAKvC,OAJAD,SAASE,KAAKC,YAAYJ,GACtBD,GACAM,EAAON,EAAUC,GAEdM,QAAQC,IAAIC,MAAMC,KAAKR,SAASS,iBAAiB,mBAAmBC,KAAIC,GAAMC,eAAeC,YAAYF,EAAGG,YAAWC,MAAK,IAAMhB,IAEtI,SAASiB,EAAkBjB,GAC9BA,EAAQkB,SAEL,SAASC,EAAwBC,GACpC,OAAOZ,MAAMC,KAAKW,EAAUC,YAAYX,iBAAiB,SAASY,QAAO,CAACC,EAAKC,KAE3ED,EADaC,EAAKC,KAAKC,OAAS,EAAIF,EAAKC,KAAO,WACpCD,EAAKG,gBAAgBL,QAAO,CAACM,EAAGC,KACxC,IAAIC,EAAYD,EAAEE,UAElB,OADAD,EAAYD,EAAEE,UAAYF,EAAEE,UAAYF,EAAEG,YAAYC,OAC/CL,GAAKE,GAAwB,MACrC,IACIP,IACR,IAEP,SAASW,EAAMC,EAAIC,EAAW,GAAIC,EAASC,EAAgB,CACvDC,QAAS,KACTC,OAAQ,OAqBR,OAnBAJ,IACAC,EACIA,GACI,IAAI/B,SAAQ,CAACiC,EAASC,KAClBF,EAAcC,QAAUA,EACxBD,EAAcE,OAASA,KAEnCL,IACKnB,MAAMyB,IACPH,EAAcC,QAAQE,MAErBC,OAAM,KACHN,EAAW,EACXF,EAAMC,EAAIC,EAAUC,EAASC,GAG7BA,EAAcE,OAAO,2BAGtBH,EAEJ,SAASM,EAAkBvB,GAC9B,OAAOc,GAAM,IAEb,IAAI5B,SAAQsC,MAAOL,EAASC,WACHpB,EAAUyB,eAE3BN,EAAQ,WAGRC,EAAO,cAKZ,SAASM,EAAc1B,GAC1B,MAAM2B,EAAS,IAAIC,WAAW,aACxBC,EAAS,IAAID,WAAW,WACxBE,EAAS,IAAIF,WAAW,SAC9B5B,EAAU+B,cAAcJ,GACxB3B,EAAU+B,cAAcF,GACxB7B,EAAU+B,cAAcD,GAGrB,SAASE,EAAUpD,EAASqD,GAC/B,OAAO,IAAI/C,SAAQiC,IACfvC,EAAQsD,iBAAiBD,GAAOE,GAAKhB,EAAQgB"}