{"version":3,"file":"button-action.element.js","sources":["../../../src/button-action/button-action.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { property, baseStyles, CdsBaseButton, LogService, state, i18n, I18nService } from '@cds/core/internal';\nimport styles from './button-action.element.scss';\n/**\n * Action Button\n *\n * ```typescript\n * import '@cds/core/button-action/register.js';\n * ```\n *\n * ```html\n * <cds-button-action></cds-button-action>\n * ```\n * @beta\n * @element cds-button-action\n * @slot - For projecting text content or cds-icon\n * @property pressed\n * @cssprop --icon-width\n * @cssprop --icon-height\n * @cssprop --width\n * @cssprop --height\n * @cssprop --cursor\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --background\n * @cssprop --padding\n * @cssprop --outline\n * @cssprop --outline-offset\n * @property pressed - boolean\n * @property expanded - boolean\n */\nexport class CdsButtonAction extends CdsBaseButton {\n    constructor() {\n        super(...arguments);\n        this.i18n = I18nService.keys.actions;\n        this.cdsButtonAction = true;\n    }\n    render() {\n        return html `\n      <div class=\"private-host\">\n        <slot\n          ><cds-icon\n            .shape=${this.shape ? this.shape : 'ellipsis-vertical'}\n            .size=${this.iconSize}\n            ?solid=${this.pressed || this.expanded}\n            inner-offset=${1}\n          ></cds-icon\n        ></slot>\n      </div>\n    `;\n    }\n    updated(props) {\n        super.updated(props);\n        if (!this.ariaLabel && !this.readonly) {\n            LogService.warn('A aria-label is required for interactive cds-button-action type', this);\n        }\n        if (props.has('readonly')) {\n            this.readonly && !this.hasAttribute('aria-label') ? (this.ariaHidden = 'true') : (this.ariaHidden = null);\n        }\n    }\n}\nCdsButtonAction.styles = [baseStyles, styles];\n__decorate([\n    property({ type: String })\n], CdsButtonAction.prototype, \"shape\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], CdsButtonAction.prototype, \"action\", void 0);\n__decorate([\n    property({ type: String })\n], CdsButtonAction.prototype, \"iconSize\", void 0);\n__decorate([\n    i18n()\n], CdsButtonAction.prototype, \"i18n\", void 0);\n__decorate([\n    state({ type: Boolean, reflect: true, attribute: 'cds-button-action' })\n], CdsButtonAction.prototype, \"cdsButtonAction\", void 0);\n"],"names":["CdsButtonAction","CdsBaseButton","constructor","super","this","i18n","I18nService","keys","actions","cdsButtonAction","render","html","shape","iconSize","pressed","expanded","updated","props","ariaLabel","readonly","LogService","warn","has","hasAttribute","ariaHidden","styles","baseStyles","__decorate","property","type","String","prototype","reflect","state","Boolean","attribute"],"mappings":"oPAqCO,MAAMA,UAAwBC,EACjCC,cACIC,oBACAC,KAAKC,KAAOC,EAAYC,KAAKC,QAC7BJ,KAAKK,iBAAkB,EAE3BC,SACI,OAAOC,CAAK,qDAICP,KAAKQ,MAAQR,KAAKQ,MAAQ,+BAC3BR,KAAKS,qBACJT,KAAKU,SAAWV,KAAKW,2BACf,8BAMvBC,QAAQC,GACJd,MAAMa,QAAQC,GACTb,KAAKc,WAAcd,KAAKe,UACzBC,EAAWC,KAAK,kEAAmEjB,MAEnFa,EAAMK,IAAI,cACVlB,KAAKe,WAAaf,KAAKmB,aAAa,cAAiBnB,KAAKoB,WAAa,OAAWpB,KAAKoB,WAAa,OAIhHxB,EAAgByB,OAAS,CAACC,EAAYD,GACtCE,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClB9B,EAAgB+B,UAAW,aAAS,GACvCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,OAAQE,SAAS,KACnChC,EAAgB+B,UAAW,cAAU,GACxCJ,EAAW,CACPC,EAAS,CAAEC,KAAMC,UAClB9B,EAAgB+B,UAAW,gBAAY,GAC1CJ,EAAW,CACPtB,KACDL,EAAgB+B,UAAW,YAAQ,GACtCJ,EAAW,CACPM,EAAM,CAAEJ,KAAMK,QAASF,SAAS,EAAMG,UAAW,uBAClDnC,EAAgB+B,UAAW,uBAAmB"}