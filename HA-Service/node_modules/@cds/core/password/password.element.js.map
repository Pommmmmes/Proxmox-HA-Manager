{"version":3,"file":"password.element.js","sources":["../../../src/password/password.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { state, i18n, I18nService } from '@cds/core/internal';\nimport { CdsControl } from '@cds/core/forms';\nimport { inputStyles } from '@cds/core/input';\nimport { ClarityIcons } from '@cds/core/icon/icon.service.js';\nimport { eyeIcon } from '@cds/core/icon/shapes/eye.js';\nimport { eyeHideIcon } from '@cds/core/icon/shapes/eye-hide.js';\n/**\n * Password\n *\n * ```typescript\n * import '@cds/core/password/register.js';\n * ```\n *\n * ```html\n * <cds-password>\n *   <label>Password</label>\n *   <input type=\"password\" />\n *   <cds-control-message>message text</cds-control-message>\n * </cds-password>\n * ```\n *\n * @element cds-password\n * @slot - For projecting password input and label\n * @cssprop --background\n * @cssprop --background-size\n * @cssprop --border\n * @cssprop --border-bottom\n * @cssprop --outline\n * @cssprop --padding\n * @cssprop --font-size\n * @cssprop --color\n * @cssprop --line-height\n * @cssprop --transition\n */\nexport class CdsPassword extends CdsControl {\n    constructor() {\n        super();\n        this.showPassword = false;\n        this.i18n = I18nService.keys.password;\n        ClarityIcons.addIcons(eyeIcon, eyeHideIcon);\n    }\n    get suffixDefaultTemplate() {\n        return html `\n      <cds-button-action\n        @click=${() => this.togglePasswordVisibility()}\n        .pressed=${this.showPassword}\n        .ariaLabel=${this.showPassword ? this.i18n.hideButtonAriaLabel : this.i18n.showButtonAriaLabel}\n      >\n        <cds-icon shape=\"${this.showPassword ? 'eye-hide' : 'eye'}\"></cds-icon>\n      </cds-button-action>\n    `;\n    }\n    static get styles() {\n        return [...super.styles, inputStyles];\n    }\n    togglePasswordVisibility() {\n        this.showPassword = !this.showPassword;\n        this.inputControl.type = this.showPassword ? 'text' : 'password';\n        this.inputControl.focus();\n    }\n}\n__decorate([\n    state()\n], CdsPassword.prototype, \"showPassword\", void 0);\n__decorate([\n    i18n()\n], CdsPassword.prototype, \"i18n\", void 0);\n"],"names":["CdsPassword","CdsControl","constructor","super","this","showPassword","i18n","I18nService","keys","password","ClarityIcons","addIcons","eyeIcon","eyeHideIcon","suffixDefaultTemplate","html","togglePasswordVisibility","hideButtonAriaLabel","showButtonAriaLabel","styles","inputStyles","inputControl","type","focus","__decorate","state","prototype"],"mappings":"oZAyCO,MAAMA,UAAoBC,EAC7BC,cACIC,QACAC,KAAKC,cAAe,EACpBD,KAAKE,KAAOC,EAAYC,KAAKC,SAC7BC,EAAaC,SAASC,EAASC,GAE/BC,4BACA,OAAOC,CAAK,8BAEH,IAAMX,KAAKY,yCACTZ,KAAKC,6BACHD,KAAKC,aAAeD,KAAKE,KAAKW,oBAAsBb,KAAKE,KAAKY,yCAExDd,KAAKC,aAAe,WAAa,yCAI7Cc,oBACP,MAAO,IAAIhB,MAAMgB,OAAQC,GAE7BJ,2BACIZ,KAAKC,cAAgBD,KAAKC,aAC1BD,KAAKiB,aAAaC,KAAOlB,KAAKC,aAAe,OAAS,WACtDD,KAAKiB,aAAaE,SAG1BC,EAAW,CACPC,KACDzB,EAAY0B,UAAW,oBAAgB,GAC1CF,EAAW,CACPlB,KACDN,EAAY0B,UAAW,YAAQ"}