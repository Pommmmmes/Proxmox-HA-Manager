{"version":3,"file":"alert-actions.element.js","sources":["../../../src/alert/alert-actions.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { assignSlotNames, baseStyles, querySlotAll, state } from '@cds/core/internal';\nimport styles from './alert-actions.element.scss';\n/**\n * Web component alert actions to be used inside default and banner alerts.\n *\n * ```typescript\n * import '@cds/core/alert/register.js';\n * ```\n *\n * ```html\n * <cds-alert>\n *   Lorem ipsum dolor sit amet\n *   <cds-alert-actions>\n *     <cds-button>Fix</cds-button>\n *   </cds-alert-actions>\n * </cds-alert>\n * ```\n *\n * @element cds-alert-actions\n * @slot\n * @cssprop --action-text-color\n * @cssprop --action-hover-text-color\n * @cssprop --action-font-size\n */\nexport class CdsAlertActions extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @type {default | banner | light}\n         * @private\n         */\n        this.type = 'light';\n    }\n    render() {\n        return html `<div class=\"private-host\" cds-layout=\"horizontal wrap:none gap:xs align:vertical-center\">\n      <slot></slot>\n    </div>`;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        assignSlotNames([this, 'actions']);\n    }\n    updated(props) {\n        super.updated(props);\n        this.buttons.forEach(b => {\n            b.status = this.type === 'banner' ? 'inverse' : 'primary';\n            b.size = this.type === 'banner' ? 'sm' : 'md';\n            b.style.setProperty('--color', 'inherit');\n        });\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n}\n__decorate([\n    state({ type: String, reflect: true })\n], CdsAlertActions.prototype, \"type\", void 0);\n__decorate([\n    querySlotAll('cds-button')\n], CdsAlertActions.prototype, \"buttons\", void 0);\n"],"names":["CdsAlertActions","LitElement","constructor","super","this","type","render","html","connectedCallback","assignSlotNames","updated","props","buttons","forEach","b","status","size","style","setProperty","styles","baseStyles","__decorate","state","String","reflect","prototype","querySlotAll"],"mappings":"+NA+BO,MAAMA,UAAwBC,EACjCC,cACIC,oBAKAC,KAAKC,KAAO,QAEhBC,SACI,OAAOC,CAAK,+GAIhBC,oBACIL,MAAMK,oBACNC,EAAgB,CAACL,KAAM,YAE3BM,QAAQC,GACJR,MAAMO,QAAQC,GACdP,KAAKQ,QAAQC,SAAQC,IACjBA,EAAEC,OAAuB,WAAdX,KAAKC,KAAoB,UAAY,UAChDS,EAAEE,KAAqB,WAAdZ,KAAKC,KAAoB,KAAO,KACzCS,EAAEG,MAAMC,YAAY,UAAW,cAG5BC,oBACP,MAAO,CAACC,EAAYD,IAG5BE,EAAW,CACPC,EAAM,CAAEjB,KAAMkB,OAAQC,SAAS,KAChCxB,EAAgByB,UAAW,YAAQ,GACtCJ,EAAW,CACPK,EAAa,eACd1B,EAAgByB,UAAW,eAAW"}