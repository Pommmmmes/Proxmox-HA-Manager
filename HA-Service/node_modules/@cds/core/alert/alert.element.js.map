{"version":3,"file":"alert.element.js","sources":["../../../src/alert/alert.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { baseStyles, property, querySlot, querySlotAll, setAttributes, syncDefinedProps, state, id, I18nService, i18n, closable, } from '@cds/core/internal';\nimport { ClarityIcons } from '@cds/core/icon/icon.service.js';\nimport { infoStandardIcon } from '@cds/core/icon/shapes/info-standard.js';\nimport { successStandardIcon } from '@cds/core/icon/shapes/success-standard.js';\nimport { warningStandardIcon } from '@cds/core/icon/shapes/warning-standard.js';\nimport { errorStandardIcon } from '@cds/core/icon/shapes/error-standard.js';\nimport { helpIcon } from '@cds/core/icon/shapes/help.js';\nimport styles from './alert.element.scss';\nexport function getIconStatusTuple(status) {\n    const statusIcons = {\n        info: [ClarityIcons.getIconNameFromShape(infoStandardIcon), I18nService.keys.alert.info],\n        success: [ClarityIcons.getIconNameFromShape(successStandardIcon), I18nService.keys.alert.success],\n        warning: [ClarityIcons.getIconNameFromShape(warningStandardIcon), I18nService.keys.alert.warning],\n        danger: [ClarityIcons.getIconNameFromShape(errorStandardIcon), I18nService.keys.alert.danger],\n        unknown: [ClarityIcons.getIconNameFromShape(helpIcon), I18nService.keys.alert.info],\n        loading: ['loading', I18nService.keys.alert.loading],\n    };\n    return statusIcons[status] ? statusIcons[status] : statusIcons.info;\n}\nexport function iconShapeIsAlertStatusType(shape) {\n    const statusShapes = ['info', 'success', 'warning', 'danger', 'unknown'].map(s => {\n        return getIconStatusShape(s);\n    });\n    return statusShapes.indexOf(shape) > -1;\n}\nexport function getIconStatusLabel(status) {\n    return getIconStatusTuple(status)[1];\n}\nexport function getIconStatusShape(status) {\n    return getIconStatusTuple(status)[0];\n}\nexport function getAlertContentLayout(containerType, alertGroupType, alertGroupHasPager) {\n    const fillLayoutValue = 'align:stretch';\n    switch (alertGroupType) {\n        case 'light':\n            return '';\n        case 'banner':\n            switch (containerType) {\n                case 'wrapper':\n                    return alertGroupHasPager ? fillLayoutValue : '';\n                case 'content':\n                    return 'align:shrink align:vertical-center';\n                case 'actions':\n                    return alertGroupHasPager ? fillLayoutValue : '';\n                default:\n                    return '';\n            }\n        default:\n            switch (containerType) {\n                case 'wrapper':\n                    return fillLayoutValue;\n                case 'content':\n                    return fillLayoutValue;\n                case 'actions':\n                    return 'align:shrink';\n                default:\n                    return '';\n            }\n    }\n}\n/**\n * Alerts are banners that communicate a message with a severity attached to it.\n * They grab the userâ€™s attention to provide critical information needed in context.\n *\n * Alerts outside of a cds-alert-group or cds-app-alert-group component will be\n * displayed as a \"lightweight alert\". Lightweight alerts, by default, provide no\n * close button component and they inherit no status (a.k.a. success, danger, etc.).\n *\n * Alerts inside a cds-alert-group component inherit their status from the containing\n * alert group.\n *\n * Alerts inside a cds-app-alert-group component inherit their status as a default from\n * the containing app-alert group, although it can be overridden on individual alerts.\n *\n * ```typescript\n * import '@cds/core/alert/register.js';\n * ```\n *\n * ```html\n *   <cds-alert>\n *     Single Alert\n *     <cds-alert-actions>\n *       buttons, links\n *     </cds-alert-actions>\n *   </cds-alert>\n * ```\n *\n * @element cds-alert\n * @slot - Content slot for inside the alert\n * @event closeChange - notify when the user has clicked the dismiss button\n * @cssprop --color\n * @cssprop --background\n * @cssprop --border-radius\n * @cssprop --border-color\n * @cssprop --icon-color\n * @cssprop --close-icon-color\n * @cssprop --close-icon-color-hover\n */\nlet CdsAlert = class CdsAlert extends LitElement {\n    constructor() {\n        super();\n        /**\n         * Sets the overall height and width of the alert and icon based on value\n         * @type {default | sm}\n         */\n        this.size = 'default';\n        /**\n         * Sets up the buttons, layouts, close-button and other properties based on the alert group container\n         * Internal Use Only\n         * @private\n         */\n        this.type = 'light';\n        /**\n         * If false, the alert will not render the close button.\n         *\n         * Lightweight alerts do not display close buttons\n         */\n        this.closable = false;\n        /**\n         * Sets the color of the alert from a predefined list of statuses\n         * @type {neutral | info | success | warning | danger | alt | loading}\n         */\n        this.status = 'neutral';\n        this.i18n = I18nService.keys.alert;\n        ClarityIcons.addIcons(infoStandardIcon, errorStandardIcon, successStandardIcon, warningStandardIcon, helpIcon);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        setAttributes(this, ['aria-describedby', this.idForAriaDescriber], ['role', 'region']);\n    }\n    updated(props) {\n        super.updated(props);\n        syncDefinedProps(props, this, [this.alertActions]);\n    }\n    get parentGroupHasPager() {\n        return this.type === 'banner' && !!this.parentElement.pager;\n    }\n    render() {\n        return html `\n      <div\n        class=\"private-host\"\n        cds-layout=\"${this.type === 'banner'\n            ? 'horizontal wrap:none gap:xs align:vertical-center align:horizontal-center'\n            : 'horizontal wrap:none gap:xs'}\"\n      >\n        ${this.type === 'banner' && !this.parentGroupHasPager\n            ? html `<span class=\"alert-spacer\" cds-layout=\"align:stretch\">&nbsp;</span>`\n            : html ``}\n        <span class=\"alert-icon-wrapper\" cds-layout=\"horizontal\">\n          ${this.status === 'loading'\n            ? html `<cds-progress-circle\n                class=\"alert-spinner\"\n                status=\"info\"\n                size=\"${this.type === 'banner' ? '20' : '18'}\"\n                aria-label=\"${getIconStatusLabel(this.status)}\"\n                role=\"img\"\n                cds-layout=\"align:horizontal-center\"\n              ></cds-progress-circle>`\n            : html `<slot name=\"alert-icon\"\n                ><cds-icon\n                  class=\"alert-status-icon\"\n                  shape=\"${getIconStatusShape(this.status)}\"\n                  role=\"img\"\n                  aria-label=\"${getIconStatusLabel(this.status)}\"\n                  cds-layout=\"align:horizontal-center\"\n                ></cds-icon\n              ></slot>`}\n        </span>\n        <span\n          class=\"alert-content-wrapper\"\n          cds-layout=\"horizontal wrap:none ${getAlertContentLayout('wrapper', this.type, this.parentGroupHasPager)}\"\n        >\n          <span\n            id=\"${this.idForAriaDescriber}\"\n            role=\"status\"\n            class=\"alert-content\"\n            cds-layout=\"${getAlertContentLayout('content', this.type, this.parentGroupHasPager)}\"\n          >\n            <slot></slot>\n            ${this.type === 'light' ? html `<slot name=\"actions\"></slot>` : html ``}\n          </span>\n          ${this.type === 'light'\n            ? html ``\n            : html `<span\n                class=\"alert-actions-wrapper\"\n                cds-layout=\"${this.alertActions ? 'p-l:md' : ''} ${getAlertContentLayout('actions', this.type, this.parentGroupHasPager)}\"\n                ><slot name=\"actions\"></slot\n              ></span>`}\n        </span>\n\n        ${this.type === 'banner' && !this.parentGroupHasPager\n            ? html `<span class=\"alert-spacer\" cds-layout=\"align:stretch\">&nbsp;</span>`\n            : html ``}\n        ${this.type !== 'light' && this.closable\n            ? html `<span class=\"alert-close-wrapper\"\n              ><slot name=\"close-button\">\n                <cds-internal-close-button\n                  icon-size=\"${this.type === 'banner' ? '20' : '16'}\"\n                  @click=\"${() => this.closableController.close(true)}\"\n                  aria-label=\"${this.i18n.closeButtonAriaLabel}\"\n                >\n                </cds-internal-close-button> </slot\n            ></span>`\n            : html ``}\n      </div>\n    `;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n};\n__decorate([\n    property({ type: String })\n], CdsAlert.prototype, \"size\", void 0);\n__decorate([\n    state({ type: String, reflect: true })\n], CdsAlert.prototype, \"type\", void 0);\n__decorate([\n    id()\n], CdsAlert.prototype, \"idForAriaDescriber\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsAlert.prototype, \"closable\", void 0);\n__decorate([\n    property({ type: String })\n], CdsAlert.prototype, \"status\", void 0);\n__decorate([\n    i18n()\n], CdsAlert.prototype, \"i18n\", void 0);\n__decorate([\n    querySlot('cds-alert-actions')\n], CdsAlert.prototype, \"alertActions\", void 0);\n__decorate([\n    querySlotAll('cds-icon', { assign: 'alert-icon' })\n], CdsAlert.prototype, \"alertIcons\", void 0);\n__decorate([\n    querySlot('cds-internal-close-button', { assign: 'close-button' })\n], CdsAlert.prototype, \"closeButton\", void 0);\nCdsAlert = __decorate([\n    closable({ escape: false })\n], CdsAlert);\nexport { CdsAlert };\n"],"names":["getIconStatusTuple","status","statusIcons","info","ClarityIcons","getIconNameFromShape","infoStandardIcon","I18nService","keys","alert","success","successStandardIcon","warning","warningStandardIcon","danger","errorStandardIcon","unknown","helpIcon","loading","iconShapeIsAlertStatusType","shape","map","s","getIconStatusShape","indexOf","getIconStatusLabel","getAlertContentLayout","containerType","alertGroupType","alertGroupHasPager","fillLayoutValue","CdsAlert","LitElement","constructor","super","this","size","type","closable","i18n","addIcons","connectedCallback","setAttributes","idForAriaDescriber","updated","props","syncDefinedProps","alertActions","parentGroupHasPager","parentElement","pager","render","html","closableController","close","closeButtonAriaLabel","styles","baseStyles","__decorate","property","String","prototype","state","reflect","id","Boolean","querySlot","querySlotAll","assign","escape"],"mappings":"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"}