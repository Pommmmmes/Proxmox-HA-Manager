{"version":3,"file":"alert-group.element.js","sources":["../../../src/alert/alert-group.element.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { query } from 'lit/decorators/query.js';\nimport { baseStyles, property, querySlot, querySlotAll, syncProps } from '@cds/core/internal';\nimport styles from './alert-group.element.scss';\n/**\n * Alert groups are containers for a set of alerts. Alert groups can hold one or many alerts\n * inside of them with the expectation that all alerts will be of the same type. The exception\n * to this rule is the `loading` alert type, which will be displayed regardless of the type\n * of alert group containing it.\n *\n * ```typescript\n * import '@cds/core/alert/register.js';\n * ```\n *\n * ```html\n *   <cds-alert-group type=\"danger\">\n *     <cds-alert closable=\"true\">\n *       Single alert\n *       <cds-alert-actions>\n *         buttons, links\n *       </cds-alert-actions>\n *     </cds-alert>\n *     <cds-alert type=\"loading\">\n *       Single Alert\n *     </cds-alert>\n *     <cds-alert closable=\"true\">\n *       Another alert\n *       <cds-alert-actions>\n *         buttons, links\n *       </cds-alert-actions>\n *     </cds-alert>\n *   </cds-alert-group>\n * ```\n *\n * @element cds-alert-group\n * @slot - Content slot for the alerts\n * @cssprop --color\n * @cssprop --icon-color\n * @cssprop --icon-size\n * @cssprop --font-size\n * @cssprop --font-weight\n * @cssprop --letter-spacing\n * @cssprop --padding\n * @cssprop --background\n * @cssprop --border-color\n * @cssprop --border-width\n * @cssprop --border-radius\n */\nexport class CdsAlertGroup extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Sets the overall height and width of the alerts inside the alert group\n         * @type {default | sm}\n         */\n        this.size = 'default';\n        /**\n         * Passed down into the alerts inside the alert-group\n         * @type {default | banner | light}\n         */\n        this.type = 'default';\n        /**\n         * Sets the status of the alerts inside the alert group\n         * @type {neutral | info | success | warning | danger | alt | loading}\n         */\n        this.status = 'neutral';\n    }\n    render() {\n        return html `\n      <div\n        cds-layout=\"horizontal wrap:none align:stretch\"\n        class=\"${this.pager ? 'private-host' : 'private-host no-pager'}\"\n      >\n        <div class=\"pager-wrapper\">\n          <slot name=\"pager\"></slot>\n        </div>\n        <div class=\"alert-group-wrapper\">\n          <div\n            class=\"alerts\"\n            cds-layout=\"vertical wrap:none align:horizontal-stretch fill ${this.size === 'sm' ? 'gap:none' : 'gap:xs'}\"\n          >\n            <slot></slot>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.role = 'region';\n    }\n    firstUpdated(props) {\n        super.firstUpdated(props);\n        this.setupAlertsUpdate();\n    }\n    setupAlertsUpdate() {\n        const propsToSync = { status: true, type: true, size: true };\n        this.alertSlot?.addEventListener('slotchange', () => this.syncAlerts(propsToSync));\n    }\n    async syncAlerts(propsToSync) {\n        await Promise.all(Array.from(this.alerts).map(a => a.updateComplete));\n        this.alerts.forEach(alert => syncProps(alert, this, {\n            status: propsToSync.status && this.type !== 'light' && alert.status !== 'loading',\n            type: propsToSync.type,\n            size: propsToSync.size,\n        }));\n    }\n    updated(props) {\n        super.updated(props);\n        this.syncAlerts({\n            status: props.has('status'),\n            type: props.has('type'),\n            size: props.has('size'),\n        });\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsAlertGroup.prototype, \"size\", void 0);\n__decorate([\n    property({ type: String })\n], CdsAlertGroup.prototype, \"type\", void 0);\n__decorate([\n    property({ type: String })\n], CdsAlertGroup.prototype, \"status\", void 0);\n__decorate([\n    querySlotAll('cds-alert')\n], CdsAlertGroup.prototype, \"alerts\", void 0);\n__decorate([\n    querySlot('.pager, cds-pagination', { assign: 'pager' })\n], CdsAlertGroup.prototype, \"pager\", void 0);\n__decorate([\n    query('.alerts')\n], CdsAlertGroup.prototype, \"alertSlot\", void 0);\n"],"names":["CdsAlertGroup","LitElement","constructor","super","this","size","type","status","render","html","pager","connectedCallback","role","firstUpdated","props","setupAlertsUpdate","propsToSync","alertSlot","addEventListener","syncAlerts","async","Promise","all","Array","from","alerts","map","a","updateComplete","forEach","alert","syncProps","updated","has","styles","baseStyles","__decorate","property","String","prototype","querySlotAll","querySlot","assign","query"],"mappings":"yRAsDO,MAAMA,UAAsBC,EAC/BC,cACIC,oBAKAC,KAAKC,KAAO,UAKZD,KAAKE,KAAO,UAKZF,KAAKG,OAAS,UAElBC,SACI,OAAOC,CAAK,+DAGHL,KAAKM,MAAQ,eAAiB,yMAQ0C,OAAdN,KAAKC,KAAgB,WAAa,4CAQzGM,oBACIR,MAAMQ,oBACNP,KAAKQ,KAAO,SAEhBC,aAAaC,GACTX,MAAMU,aAAaC,GACnBV,KAAKW,oBAETA,oBACI,MAAMC,EAAc,CAAET,QAAQ,EAAMD,MAAM,EAAMD,MAAM,GACtDD,KAAKa,WAAWC,iBAAiB,cAAc,IAAMd,KAAKe,WAAWH,KAEzEI,iBAAiBJ,SACPK,QAAQC,IAAIC,MAAMC,KAAKpB,KAAKqB,QAAQC,KAAIC,GAAKA,EAAEC,kBACrDxB,KAAKqB,OAAOI,SAAQC,GAASC,EAAUD,EAAO1B,KAAM,CAChDG,OAAQS,EAAYT,QAAwB,UAAdH,KAAKE,MAAqC,YAAjBwB,EAAMvB,OAC7DD,KAAMU,EAAYV,KAClBD,KAAMW,EAAYX,SAG1B2B,QAAQlB,GACJX,MAAM6B,QAAQlB,GACdV,KAAKe,WAAW,CACZZ,OAAQO,EAAMmB,IAAI,UAClB3B,KAAMQ,EAAMmB,IAAI,QAChB5B,KAAMS,EAAMmB,IAAI,UAGbC,oBACP,MAAO,CAACC,EAAYD,IAG5BE,EAAW,CACPC,EAAS,CAAE/B,KAAMgC,UAClBtC,EAAcuC,UAAW,YAAQ,GACpCH,EAAW,CACPC,EAAS,CAAE/B,KAAMgC,UAClBtC,EAAcuC,UAAW,YAAQ,GACpCH,EAAW,CACPC,EAAS,CAAE/B,KAAMgC,UAClBtC,EAAcuC,UAAW,cAAU,GACtCH,EAAW,CACPI,EAAa,cACdxC,EAAcuC,UAAW,cAAU,GACtCH,EAAW,CACPK,EAAU,yBAA0B,CAAEC,OAAQ,WAC/C1C,EAAcuC,UAAW,aAAS,GACrCH,EAAW,CACPO,EAAM,YACP3C,EAAcuC,UAAW,iBAAa"}