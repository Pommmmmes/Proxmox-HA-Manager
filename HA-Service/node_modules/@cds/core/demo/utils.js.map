{"version":3,"file":"utils.js","sources":["../../../src/demo/utils.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function filter(list, key, term) {\n    return [...list].filter(i => i[key].toLocaleLowerCase().includes(term.toLocaleLowerCase()));\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function sortStrings(list, key, sortType) {\n    if (sortType === 'ascending') {\n        return list.sort((a, b) => a[key].localeCompare(b[key]));\n    }\n    if (sortType === 'descending') {\n        return list.sort((a, b) => a[key].localeCompare(b[key])).reverse();\n    }\n    return list;\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function swapBetweenLists(targetList, fromList, detail) {\n    const itemId = fromList.find(i => i.id === detail.from.id);\n    const targetId = targetList.find(i => i.id === detail.target.id);\n    const item = fromList.splice(fromList.indexOf(itemId), 1)[0];\n    const targetIndex = targetList.indexOf(targetId);\n    targetIndex === -1 ? targetList.push(item) : targetList.splice(targetIndex, 0, item);\n    return { targetList: [...targetList], fromList: [...fromList] };\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function paginate(arr, size) {\n    return [...arr].reduce((acc, val, i) => {\n        const idx = Math.floor(i / size);\n        const page = acc[idx] || (acc[idx] = []);\n        page.push(val);\n        return acc;\n    }, []);\n}\n/**\n * @demo\n * @deprecated\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function swapItems(target, src, list) {\n    const data = [...list];\n    const srcIndex = data.findIndex(i => `${i.id}` === `${src.id}`);\n    const srcItem = data.splice(srcIndex, 1)[0];\n    const targetIndex = data.findIndex(i => `${i.id}` === `${target.id}`);\n    targetIndex === -1 ? data.push(srcItem) : data.splice(targetIndex, 0, srcItem);\n    return data;\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function insertBefore(fromIndex, targetIndex, list) {\n    const listCopy = [...list];\n    const itemRemoved = listCopy.splice(fromIndex, 1);\n    const offset = fromIndex + 1 < targetIndex ? -1 : 0;\n    listCopy.splice(targetIndex + offset, 0, itemRemoved[0]);\n    return listCopy;\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function parseCSV(text) {\n    const arr = text\n        .trim()\n        .split('\\n')\n        .map(i => i.split(','));\n    const csv = {\n        columns: arr[0],\n        rows: arr.slice(1).map(cells => cells.map(c => c.trim())),\n    };\n    return csv;\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function exportElementsToCSV(columnElements, rowElements) {\n    const columns = Array.from(columnElements).map(c => c.textContent?.trim());\n    const rows = Array.from(rowElements).map(r => Array.from(r.children).map(c => `${c.textContent}${c.querySelector('input')?.value}`));\n    return `${columns.join(',')}\\n${rows.map(cells => `${cells.map(c => c.trim()).join(',')}`).join('\\n')}`;\n}\n/**\n * @demo\n * This is a demo function used to standardize demos across framework examples. Do not use in production.\n */\nexport function toggleRange(rows, indexStart, indexEnd) {\n    if (indexStart < indexEnd) {\n        rows.slice(indexStart, indexEnd + 1).map(r => (r.selected = rows[indexStart].selected));\n    }\n    else {\n        rows.slice(indexEnd, indexStart + 1).map(r => (r.selected = rows[indexStart].selected));\n    }\n}\n"],"names":["filter","list","key","term","i","toLocaleLowerCase","includes","sortStrings","sortType","sort","a","b","localeCompare","reverse","swapBetweenLists","targetList","fromList","detail","itemId","find","id","from","targetId","target","item","splice","indexOf","targetIndex","push","paginate","arr","size","reduce","acc","val","idx","Math","floor","swapItems","src","data","srcIndex","findIndex","srcItem","insertBefore","fromIndex","listCopy","itemRemoved","offset","parseCSV","text","trim","split","map","columns","rows","slice","cells","c","exportElementsToCSV","columnElements","rowElements","Array","textContent","r","children","querySelector","value","join","toggleRange","indexStart","indexEnd","selected"],"mappings":"AASO,SAASA,EAAOC,EAAMC,EAAKC,GAC9B,MAAO,IAAIF,GAAMD,QAAOI,GAAKA,EAAEF,GAAKG,oBAAoBC,SAASH,EAAKE,uBAMnE,SAASE,EAAYN,EAAMC,EAAKM,GACnC,MAAiB,cAAbA,EACOP,EAAKQ,MAAK,CAACC,EAAGC,IAAMD,EAAER,GAAKU,cAAcD,EAAET,MAErC,eAAbM,EACOP,EAAKQ,MAAK,CAACC,EAAGC,IAAMD,EAAER,GAAKU,cAAcD,EAAET,MAAOW,UAEtDZ,EAMJ,SAASa,EAAiBC,EAAYC,EAAUC,GACnD,MAAMC,EAASF,EAASG,MAAKf,GAAKA,EAAEgB,KAAOH,EAAOI,KAAKD,KACjDE,EAAWP,EAAWI,MAAKf,GAAKA,EAAEgB,KAAOH,EAAOM,OAAOH,KACvDI,EAAOR,EAASS,OAAOT,EAASU,QAAQR,GAAS,GAAG,GACpDS,EAAcZ,EAAWW,QAAQJ,GAEvC,OADiB,IAAjBK,EAAqBZ,EAAWa,KAAKJ,GAAQT,EAAWU,OAAOE,EAAa,EAAGH,GACxE,CAAET,WAAY,IAAIA,GAAaC,SAAU,IAAIA,IAMjD,SAASa,EAASC,EAAKC,GAC1B,MAAO,IAAID,GAAKE,QAAO,CAACC,EAAKC,EAAK9B,KAC9B,MAAM+B,EAAMC,KAAKC,MAAMjC,EAAI2B,GAG3B,OAFaE,EAAIE,KAASF,EAAIE,GAAO,KAChCP,KAAKM,GACHD,IACR,IAOA,SAASK,EAAUf,EAAQgB,EAAKtC,GACnC,MAAMuC,EAAO,IAAIvC,GACXwC,EAAWD,EAAKE,WAAUtC,GAAK,GAAGA,EAAEgB,IAAS,GAAGmB,EAAInB,KACpDuB,EAAUH,EAAKf,OAAOgB,EAAU,GAAG,GACnCd,EAAca,EAAKE,WAAUtC,GAAK,GAAGA,EAAEgB,IAAS,GAAGG,EAAOH,KAEhE,OADiB,IAAjBO,EAAqBa,EAAKZ,KAAKe,GAAWH,EAAKf,OAAOE,EAAa,EAAGgB,GAC/DH,EAMJ,SAASI,EAAaC,EAAWlB,EAAa1B,GACjD,MAAM6C,EAAW,IAAI7C,GACf8C,EAAcD,EAASrB,OAAOoB,EAAW,GACzCG,EAASH,EAAY,EAAIlB,GAAe,EAAI,EAElD,OADAmB,EAASrB,OAAOE,EAAcqB,EAAQ,EAAGD,EAAY,IAC9CD,EAMJ,SAASG,EAASC,GACrB,MAAMpB,EAAMoB,EACPC,OACAC,MAAM,MACNC,KAAIjD,GAAKA,EAAEgD,MAAM,OAKtB,MAJY,CACRE,QAASxB,EAAI,GACbyB,KAAMzB,EAAI0B,MAAM,GAAGH,KAAII,GAASA,EAAMJ,KAAIK,GAAKA,EAAEP,YAQlD,SAASQ,EAAoBC,EAAgBC,GAChD,MAAMP,EAAUQ,MAAMzC,KAAKuC,GAAgBP,KAAIK,GAAKA,EAAEK,aAAaZ,SAC7DI,EAAOO,MAAMzC,KAAKwC,GAAaR,KAAIW,GAAKF,MAAMzC,KAAK2C,EAAEC,UAAUZ,KAAIK,GAAK,GAAGA,EAAEK,cAAcL,EAAEQ,cAAc,UAAUC,YAC3H,MAAO,GAAGb,EAAQc,KAAK,SAASb,EAAKF,KAAII,GAAS,GAAGA,EAAMJ,KAAIK,GAAKA,EAAEP,SAAQiB,KAAK,OAAQA,KAAK,QAM7F,SAASC,EAAYd,EAAMe,EAAYC,GACtCD,EAAaC,EACbhB,EAAKC,MAAMc,EAAYC,EAAW,GAAGlB,KAAIW,GAAMA,EAAEQ,SAAWjB,EAAKe,GAAYE,WAG7EjB,EAAKC,MAAMe,EAAUD,EAAa,GAAGjB,KAAIW,GAAMA,EAAEQ,SAAWjB,EAAKe,GAAYE"}